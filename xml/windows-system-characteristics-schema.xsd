<?xml version="1.0" encoding="utf-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:oval-sc="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5" xmlns:oval="http://oval.mitre.org/XMLSchema/oval-common-5" xmlns:win-sc="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows" xmlns:sch="http://purl.oclc.org/dsdl/schematron" targetNamespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows" elementFormDefault="qualified" version="5.8">
     <xsd:import namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5" schemaLocation="oval-system-characteristics-schema.xsd"/>
     <xsd:annotation>
          <xsd:documentation>The following is a description of the elements, types, and attributes that compose the Windows specific system characteristic items found in Open Vulnerability and Assessment Language (OVAL). Each item is an extension of the standard item element defined in the Core System Characteristic Schema. Through extension, each item inherits a set of elements and attributes that are shared amongst all OVAL Items. Each item is described in detail and should provide the information necessary to understand what each element and attribute represents. This document is intended for developers and assumes some familiarity with XML. A high level description of the interaction between the different tests and their relationship to the Core System Characteristic Schema is not outlined here.</xsd:documentation>
          <xsd:documentation>The OVAL Schema is maintained by The MITRE Corporation and developed by the public OVAL Community. For more information, including how to get involved in the project and how to submit change requests, please visit the OVAL website at http://oval.mitre.org.</xsd:documentation>
          <xsd:appinfo>
               <schema>Windows System Characteristics</schema>
               <version>5.8 Draft 2</version>
               <date>5/26/2010 2:55:47 PM</date>
                <terms_of_use>Copyright (c) 2002-2010, The MITRE Corporation. All rights reserved.  The contents of this file are subject to the terms of the OVAL License located at http://oval.mitre.org/oval/about/termsofuse.html. See the OVAL License for the specific language governing permissions and limitations for use of this schema.  When distributing copies of the OVAL Schema, this license header must be included.</terms_of_use>
               <sch:ns prefix="oval-sc" uri="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5"/>
               <sch:ns prefix="win-sc" uri="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows"/>
              <sch:ns prefix="xsi" uri="http://www.w3.org/2001/XMLSchema-instance"/>
          </xsd:appinfo>
     </xsd:annotation>
     <!-- =============================================================================== -->
     <!-- =============================  ACCESS TOKEN ITEM  ============================= -->
     <!-- =============================================================================== -->
     <xsd:element name="accesstoken_item" substitutionGroup="oval-sc:item">
          <xsd:annotation>
               <xsd:documentation>The access token item holds information about the individual privileges and rights associated with a specific access token. It is important to note that these privileges are specific to certain versions of Windows.  As a result, the documentation for that version of Windows should be consulted for more information. Each privilege and right in the data section accepts a boolean value signifying whether the privilege is granted or not. It extends the standard ItemType as defined in the oval-system-characteristics schema and one should refer to the ItemType description for more information.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
               <xsd:complexContent>
                    <xsd:extension base="oval-sc:ItemType">
                         <xsd:sequence>
                              <xsd:element name="security_principle" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Security principals include users or groups with either local or domain accounts, and computer accounts created when a computer joins a domain. User rights and permissions to access objects such as Active Directory objects, files, and registry settings are assigned to security principals. In a domain environment, security principals should be identified in the form: "domain\trustee name" For local security principals use: "computer name\trustee name" For built-in accounts on the system, use the trustee name without a domain. For example: ADMINISTRATOR, SYSTEM, NETWORK_SERVICES, ADMINISTRATORS (group), etc. Note that the built-in security principals should be all caps as that is how the Windows APIs return them.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="seassignprimarytokenprivilege" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If this privilege is enabled, it allows a parent process to replace the access token that is associated with a child process.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="seauditprivilege" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If this privilege is enabled, it allows a process to generate audit records in the security log. The security log can be used to trace unauthorized system access.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="sebackupprivilege" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If this privilege is enabled, it allows the user to circumvent file and directory permissions to back up the system. The privilege is selected only when an application attempts access by using the NTFS backup application programming interface (API). Otherwise, normal file and directory permissions apply.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="sechangenotifyprivilege" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If this privilege is enabled, it allows the user to pass through folders to which the user otherwise has no access while navigating an object path in the NTFS file system or in the registry. This privilege does not allow the user to list the contents of a folder; it allows the user only to traverse its directories.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="secreateglobalprivilege" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If this privilege is enabled, it allows the user to create named file mapping objects in the global namespace during Terminal Services sessions.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="secreatepagefileprivilege" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If this privilege is enabled, it allows the user to create and change the size of a pagefile.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="secreatepermanentprivilege" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If this privilege is enabled, it allows a process to create a directory object in the object manager. It is useful to kernel-mode components that extend the object namespace. Components that are running in kernel mode have this privilege inherently.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="secreatesymboliclinkprivilege" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If this privilege is enabled, it allows a user create a symbolic link.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="secreatetokenprivilege" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If this privilege is enabled, it allows a process to create an access token by calling NtCreateToken() or other token-creating APIs.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="sedebugprivilege" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If this privilege is enabled, it allows the user to attach a debugger to any process. It provides access to sensitive and critical operating system components.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="seenabledelegationprivilege" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If this privilege is enabled, it allows the user to change the Trusted for Delegation setting on a user or computer object in Active Directory. The user or computer that is granted this privilege must also have write access to the account control flags on the object.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="seimpersonateprivilege" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If this privilege is enabled, it allows the user to impersonate a client after authentication.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="seincreasebasepriorityprivilege" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If this privilege is enabled, it allows a user to increase the base priority class of a process.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="seincreasequotaprivilege" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If this privilege is enabled, it allows a process that has access to a second process to increase the processor quota assigned to the second process.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="seincreaseworkingsetprivilege" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If this privilege is enabled, it allows a user to increase a process working set.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="seloaddriverprivilege" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If this privilege is enabled, it allows a user to install and remove drivers for Plug and Play devices.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="selockmemoryprivilege" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If this privilege is enabled, it allows a process to keep data in physical memory, which prevents the system from paging the data to virtual memory on disk.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="semachineaccountprivilege" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If this privilege is enabled, it allows the user to add a computer to a specific domain.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="semanagevolumeprivilege" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If this privilege is enabled, it allows a non-administrative or remote user to manage volumes or disks.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="seprofilesingleprocessprivilege" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If this privilege is enabled, it allows a user to sample the performance of an application process.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="serelabelprivilege" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If this privilege is enabled, it allows a user to modify an object label.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="seremoteshutdownprivilege" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If this privilege is enabled, it allows a user to shut down a computer from a remote location on the network.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="serestoreprivilege" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If this privilege is enabled, it allows a user to circumvent file and directory permissions when restoring backed-up files and directories and to set any valid security principal as the owner of an object.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="sesecurityprivilege" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If this privilege is enabled, it allows a user to specify object access auditing options for individual resources such as files, Active Directory objects, and registry keys. A user who has this privilege can also view and clear the security log from Event Viewer.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="seshutdownprivilege" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If this privilege is enabled, it allows a user to shut down the local computer.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="sesyncagentprivilege" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If this privilege is enabled, it allows a process to read all objects and properties in the directory, regardless of the protection on the objects and properties. It is required in order to use Lightweight Directory Access Protocol (LDAP) directory synchronization (Dirsync) services.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="sesystemenvironmentprivilege" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If this privilege is enabled, it allows modification of system environment variables either by a process through an API or by a user through System Properties.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="sesystemprofileprivilege" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If this privilege is enabled, it allows a user to sample the performance of system processes.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="sesystemtimeprivilege" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If this privilege is enabled, it allows the user to adjust the time on the computer's internal clock. It is not required to change the time zone or other display characteristics of the system time.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="setakeownershipprivilege" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If this privilege is enabled, it allows a user to take ownership of any securable object in the system, including Active Directory objects, NTFS files and folders, printers, registry keys, services, processes, and threads.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="setcbprivilege" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If this privilege is enabled, it allows a process to assume the identity of any user and thus gain access to the resources that the user is authorized to access.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="setimezoneprivilege" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If this privilege is enabled, it allows a user to change the time zone.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="seundockprivilege" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If this privilege is enabled, it allows the user of a portable computer to undock the computer by clicking Eject PC on the Start menu.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="seunsolicitedinputprivilege" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If this privilege is enabled, it allows the user to read unsolicited data from a terminal device.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="sebatchlogonright" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If an account is assigned this right, it can log on using the batch logon type.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="seinteractivelogonright" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If an account is assigned this right, it can log on using the interactive logon type.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="senetworklogonright" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If an account is assigned this right, it can log on using the network logon type.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="seremoteinteractivelogonright" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If an account is assigned this right, it can log on to the computer by using a Remote Desktop connection.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="seservicelogonright" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If an account is assigned this right, it can log on using the service logon type.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="sedenybatchLogonright" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If an account is assigned this right, it is explicitly denied the ability to log on using the batch logon type.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="sedenyinteractivelogonright" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If an account is assigned this right, it is explicitly denied the ability to log on using the interactive logon type.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="sedenynetworklogonright" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If an account is assigned this right, it is explicitly denied the ability to log on using the network logon type.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="sedenyremoteInteractivelogonright" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If an account is assigned this right, it is explicitly denied the ability to log on through Terminal Services.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="sedenyservicelogonright" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>If an account is assigned this right, it is explicitly denied the ability to log on using the service logon type.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                         </xsd:sequence>
                    </xsd:extension>
               </xsd:complexContent>
          </xsd:complexType>
     </xsd:element>
     <!-- =============================================================================== -->
     <!-- ========================  ACTIVE DIRECTORY ITEM  ============================== -->
     <!-- =============================================================================== -->
     <xsd:element name="activedirectory_item" substitutionGroup="oval-sc:item">
          <xsd:annotation>
               <xsd:documentation>The active directory item holds information about specific entries in the Windows Active Directory. It extends the standard ItemType as defined in the oval-system-characteristics schema and one should refer to the ItemType description for more information.</xsd:documentation>
               <xsd:appinfo>
                    <oval:deprecated_info>
                         <oval:version>5.7</oval:version>
                         <oval:reason>Replaced by the activedirectory57_item. This item allows for single fields to be selected from active directory. A new item was created to allow more than one field to be selected in one statement. See the activedirectory57_item.</oval:reason>
                         <oval:comment>This object has been deprecated and may be removed in a future version of the language.</oval:comment>
                    </oval:deprecated_info>
                    <sch:pattern id="win-sc_activedirectory_item_dep">
                         <sch:rule context="win-sc:activedirectory_item">
                              <sch:report test="true()">DEPRECATED ITEM: <sch:value-of select="name()"/> ID: <sch:value-of select="@id"/></sch:report>
                         </sch:rule>
                    </sch:pattern>                        
               </xsd:appinfo>
          </xsd:annotation>
          <xsd:complexType>
               <xsd:complexContent>
                    <xsd:extension base="oval-sc:ItemType">
                         <xsd:sequence>
                              <xsd:element name="naming_context" type="win-sc:EntityItemNamingContextType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Each object in active directory exists under a certain naming context (also known as a partition). A naming context is defined as a single object in the Directory Information Tree (DIT) along with every object in the tree subordinate to it. There are three default naming contexts in Active Directory: domain, configuration, and schema.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="relative_dn" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1" nillable="true">
                                   <xsd:annotation>
                                        <xsd:documentation>The relative_dn field is used to uniquely identify an object inside the specified naming context. It contains all the parts of the objects distinguished name except those outlined by the naming context. If the xsi:nil attribute is set to true, then the item being represented is the higher level naming context. Using xsi:nil here will result in a status of 'does not exist' for object_class, adstype, and value since these entities are not associated with a naming context by itself. Note that when xsi:nil is used for the relative dn element, the attribute element should also be nilled.</xsd:documentation>
                                        <xsd:appinfo>
                                             <sch:pattern id="win-sc_aditemrelative_dn">
                                                  <sch:rule context="win-sc:activedirectory_item/win-sc:relative_dn">
                                                       <sch:assert test="not(@xsi:nil='true') or ../win-sc:attribute/@xsi:nil='true'"><sch:value-of select="../@id"/> - attribute entity must be nil when relative_dn is nil</sch:assert>
                                                  </sch:rule>
                                             </sch:pattern>
                                        </xsd:appinfo>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="attribute" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1" nillable="true">
                                   <xsd:annotation>
                                        <xsd:documentation>Specifies a named value contained by the object. If the xsi:nil attribute is set to true, then the item being represented is the higher level relative dn. Using xsi:nil here will result in a status of 'does not exist' for object_class, adstype, and value since these entities are not associated with a relative dn by itself.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="object_class" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The name of the class of which the object is an instance.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="adstype" type="win-sc:EntityItemAdstypeType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Specifies the type of information that the specified attribute represents.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="value" type="oval-sc:EntityItemAnySimpleType" minOccurs="0" maxOccurs="unbounded">
                                   <xsd:annotation>
                                        <xsd:documentation>The actual value of the specified active directory attribute.</xsd:documentation>
                                        <xsd:appinfo>
                                             <sch:pattern id="win-sc_aditemvalue">
                                                  <sch:rule context="win-sc:activedirectory_item/win-sc:value">
                                                       <sch:assert test="not(@datatype='record')"><sch:value-of select="../@id"/> - datatype attribute for the <sch:value-of select="name()"/> entity of an <sch:value-of select="name(..)"/> should not be 'record'</sch:assert>
                                                  </sch:rule>
                                             </sch:pattern>
                                        </xsd:appinfo>
                                   </xsd:annotation>
                              </xsd:element>
                         </xsd:sequence>
                    </xsd:extension>
               </xsd:complexContent>
          </xsd:complexType>
     </xsd:element>
     <!-- =============================================================================== -->
     <!-- ========================  ACTIVE DIRECTORY ITEM (57)  ========================= -->
     <!-- =============================================================================== -->
     <xsd:element name="activedirectory57_item" substitutionGroup="oval-sc:item">
          <xsd:annotation>
               <xsd:documentation>The activedirectory57_item holds information about specific entries in the Windows Active Directory. It extends the standard ItemType as defined in the oval-system-characteristics schema and one should refer to the ItemType description for more information.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
               <xsd:complexContent>
                    <xsd:extension base="oval-sc:ItemType">
                         <xsd:sequence>
                              <xsd:element name="naming_context" type="win-sc:EntityItemNamingContextType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Each object in active directory exists under a certain naming context (also known as a partition). A naming context is defined as a single object in the Directory Information Tree (DIT) along with every object in the tree subordinate to it. There are three default naming contexts in Active Directory: domain, configuration, and schema.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="relative_dn" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1" nillable="true">
                                   <xsd:annotation>
                                        <xsd:documentation>The relative_dn field is used to uniquely identify an object inside the specified naming context. It contains all the parts of the objects distinguished name except those outlined by the naming context. If the xsi:nil attribute is set to true, then the item being represented is the higher level naming context. Using xsi:nil here will result in a status of 'does not exist' for object_class, adstype, and value since these entities are not associated with a naming context by itself. Note that when xsi:nil is used for the relative dn element, the attribute element should also be nilled.</xsd:documentation>
                                        <xsd:appinfo>
                                             <sch:pattern id="win-sc_activedirectory57_item_relative_dn">
                                                  <sch:rule context="win-sc:activedirectory57_item/win-sc:relative_dn">
                                                       <sch:assert test="not(@xsi:nil='true') or ../win-sc:attribute/@xsi:nil='true'"><sch:value-of select="../@id"/> - attribute entity must be nil when relative_dn is nil</sch:assert>
                                                  </sch:rule>
                                             </sch:pattern>
                                        </xsd:appinfo>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="attribute" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1" nillable="true">
                                   <xsd:annotation>
                                        <xsd:documentation>Specifies a named value contained by the object. If the xsi:nil attribute is set to true, then the item being represented is the higher level relative dn. Using xsi:nil here will result in a status of 'does not exist' for object_class, adstype, and value since these entities are not associated with a relative dn by itself.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="object_class" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The name of the class of which the object is an instance.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="adstype" type="win-sc:EntityItemAdstypeType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Specifies the type of information that the specified attribute represents.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="value" type="oval-sc:EntityItemRecordType" minOccurs="0" maxOccurs="unbounded">
                                   <xsd:annotation>
                                        <xsd:documentation>The actual value of the specified active directory attribute.</xsd:documentation>
                                   </xsd:annotation>                                   
                              </xsd:element>
                         </xsd:sequence>
                    </xsd:extension>
               </xsd:complexContent>
          </xsd:complexType>
     </xsd:element>
     <!-- =============================================================================== -->
     <!-- =======================  AUDIT EVENT POLICY ITEM  ============================= -->
     <!-- =============================================================================== -->
     <xsd:element name="auditeventpolicy_item" substitutionGroup="oval-sc:item">
          <xsd:annotation>
               <xsd:documentation>The auditeventpolicy item enumerates the different types of events the system should audit. The defined values are found in window's POLICY_AUDIT_EVENT_TYPE enumeration and accessed through the LsaQueryInformationPolicy when the InformationClass parameters are set to PolicyAuditEventsInformation. It extends the standard ItemType as defined in the oval-system-characteristics schema and one should refer to the ItemType description for more information.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
               <xsd:complexContent>
                    <xsd:extension base="oval-sc:ItemType">
                         <xsd:sequence>
                              <xsd:element name="account_logon" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit attempts to log on to or log off of the system. Also, audit attempts to make a network connection.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="account_management" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit attempts to create, delete, or change user or group accounts. Also, audit password changes.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="detailed_tracking" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit specific events, such as program activation, some forms of handle duplication, indirect access to an object, and process exit. </xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="directory_service_access" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit attempts to access the directory service.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="logon" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit attempts to log on to or log off of the system. Also, audit attempts to make a network connection.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="object_access" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit attempts to access securable objects, such as files.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="policy_change" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit attempts to change Policy object rules. </xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="privilege_use" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit attempts to use privileges.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="system" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit attempts to shut down or restart the computer. Also, audit events that affect system security or the security log.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                         </xsd:sequence>
                    </xsd:extension>
               </xsd:complexContent>
          </xsd:complexType>
     </xsd:element>
     <!-- =============================================================================== -->
     <!-- ===================  AUDIT EVENT POLICY SUBCATEGORIES ITEM  =================== -->
     <!-- =============================================================================== -->
     <xsd:element name="auditeventpolicysubcategories_item" substitutionGroup="oval-sc:item">
          <xsd:annotation>
               <xsd:documentation>The auditeventpolicysubcategories_item is used to hold information about the audit event policy settings on a Windows system. These settings are used to specify which system and network events are monitored.  For example, if the credential_validation element has a value of AUDIT_FAILURE, it means that the system is configured to log all unsuccessful attempts to validate a user account on a system. It is important to note that these audit event policy settings are specific to certain versions of Windows. As a result, the documentation for that version of Windows should be consulted for more information on each setting. It extends the standard ItemType as defined in the oval-system-characteristics schema and one should refer to the ItemType description for more information.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
               <xsd:complexContent>
                    <xsd:extension base="oval-sc:ItemType">
                         <xsd:sequence>
                              <!-- Account Logon Audit Policy Subcategories -->
                              <xsd:element name="credential_validation" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced during the validation of a user's logon credentials.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="kerberos_authentication_service" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by Kerberos authentication ticket-granting requests.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="kerberos_service_ticket_operations" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by Kerberos service ticket requests.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="kerberos_ticket_events" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced during the validation of Kerberos tickets provided for a user account logon request.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="other_account_logon_events" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by changes to user accounts that are not covered by other events in the Account Logon category.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <!-- Account Management Audit Policy Subcategories -->
                              <xsd:element name="application_group_management" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by changes to application groups.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="computer_account_management" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by changes to computer accounts.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="distribution_group_management" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by changes to distribution groups.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="other_account_management_events" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by other user account changes that are not covered by other events in the Account Management category.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="security_group_management" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by changes to security groups.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="user_account_management" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by changes to user accounts.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <!-- Detailed Tracking Audit Policy Subcategories -->
                              <xsd:element name="dpapi_activity" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced when requests are made to the Data Protection application interface.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="process_creation" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced when a process is created or starts.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="process_termination" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced when a process ends.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="rpc_events" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by inbound remote procedure call connections.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <!-- DS Access Audit Policy Subcategories -->
                              <xsd:element name="directory_service_access" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced when a Active Directory Domain Services object is accessed.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="directory_service_changes" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced when changes are made to Active Directory Domain Services objects.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="directory_service_replication" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced when two Active Directory Domain Services domain controllers are replicated.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="detailed_directory_service_replication" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by detailed Active Directory Domain Services replication between domain controllers.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <!-- Logon/Logoff Audit Policy Subcategories -->
                              <xsd:element name="account_lockout" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by a failed attempt to log onto a locked out account.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="ipsec_extended_mode" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by Internet Key Exchange and Authenticated Internet protocol during Extended Mode negotiations.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="ipsec_main_mode" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by Internet Key Exchange and Authenticated Internet protocol during Main Mode negotiations.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="ipsec_quick_mode" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by Internet Key Exchange and Authenticated Internet protocol during Quick Mode negotiations.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="logoff" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by closing a logon session.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="logon" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by attempts to log onto a user account.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="network_policy_server" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by RADIUS and Network Access Protection user access requests.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="other_logon_logoff_events" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by other logon/logoff based events that are not covered in the Logon/Logoff category.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="special_logon" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by special logons.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <!-- Object Access Audit Policy Subcategories -->
                              <xsd:element name="application_generated" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by applications that use the Windows Auditing API.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="certification_services" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by operations on Active Directory Certificate Services.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="detailed_file_share" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by attempts to access files and folders on a shared folder.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_share" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by attempts to access a shared folder.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_system" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced user attempts to access file system objects.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="filtering_platform_connection" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by connections that are allowed or blocked by Windows Filtering Platform.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="filtering_platform_packet_drop" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by packets that are dropped by Windows Filtering Platform.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="handle_manipulation" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced when a handle is opened or closed.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="kernel_object" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by attempts to access the system kernel.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="other_object_access_events" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by the management of Task Scheduler jobs or COM+ objects.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="registry" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by attempts to access registry objects.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="sam" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by attempts to access Security Accounts Manager objects.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <!-- Policy Change Audit Policy Subcategories -->
                              <xsd:element name="audit_policy_change" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by changes in security audit policy settings.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="authentication_policy_change" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by changes to the authentication policy.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="authorization_policy_change" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by changes to the authorization policy.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="filtering_platform_policy_change" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by changes to the Windows Filtering Platform.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="mpssvc_rule_level_policy_change" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by changes to policy rules used by the Windows Firewall.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="other_policy_change_events" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by other security policy changes that are not covered other events in the Policy Change category.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <!-- Privilege Use Audit Policy Subcategories -->
                              <xsd:element name="non_sensitive_privilege_use" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by the use of non-sensitive privileges.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="other_privilege_use_events" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>This is currently not used and has been reserved by Microsoft for use in the future.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="sensitive_privilege_use" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by the use of sensitive privileges.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <!-- System Audit Policy Subcategories --> 
                              <xsd:element name="ipsec_driver" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by the IPsec filter driver.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="other_system_events" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by the startup and shutdown, security policy processing, and cryptography key file and migration operations of the Windows Firewall.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="security_state_change" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by changes in the security state.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="security_system_extension" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events produced by the security system extensions or services.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="system_integrity" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Audit the events that indicate that the integrity security subsystem has been violated.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                         </xsd:sequence>
                    </xsd:extension>
               </xsd:complexContent>
          </xsd:complexType>
     </xsd:element>
     <!-- =============================================================================== -->
     <!-- =============================  DNS CACHE ITEM  ================================ -->
     <!-- =============================================================================== -->
     <xsd:element name="dnscache_item" substitutionGroup="oval-sc:item">
          <xsd:annotation>
               <xsd:documentation>The dnscache_item stores information retrieved from the DNS cache about a domain name, its time to live, and its corresponding IP addresses.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
               <xsd:complexContent>
                    <xsd:extension base="oval-sc:ItemType">
                         <xsd:sequence>
                              <xsd:element name="domain_name" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The domain_name element contains a string that represents a domain name that was collected from the DNS cache on the local system.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="ttl" type="oval-sc:EntityItemIntType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The ttl element contains an integer that represents the time to live in seconds of the DNS cache entry.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="ip_address" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="unbounded">
                                   <xsd:annotation>
                                        <xsd:documentation>The ip_address element contains a string that represents an IP address associated with the specified domain name. Note that the IP address can be IPv4 or IPv6.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                         </xsd:sequence>
                    </xsd:extension>
               </xsd:complexContent>
          </xsd:complexType>
     </xsd:element>
     <!-- =============================================================================== -->
     <!-- ==============================  FILE ITEM  ==================================== -->
     <!-- =============================================================================== -->
     <xsd:element name="file_item" substitutionGroup="oval-sc:item">
          <xsd:annotation>
               <xsd:documentation>This element describes file metadata. The time information can be retrieved by the _stst function. Development_class and other version information (company, internal name, language, original_filename, product_name, product_version) can be retrieved using the VerQueryValue function.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
               <xsd:complexContent>
                    <xsd:extension base="oval-sc:ItemType">
                         <xsd:sequence>
                              <xsd:element name="filepath" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The filepath element specifies the absolute path for a file on the machine. A directory cannot be specified as a filepath.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="path" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Specifies the directory component of the absolute path to a file on the machine.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="filename" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1" nillable="true">
                                   <xsd:annotation>
                                        <xsd:documentation>The name of the file. If the xsi:nil attribute is set to true, then the item being represented is the higher directory represented by the path entity. The other items associated with this item would then reflect the values associated with the directory.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="owner" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>A string that contains the name of the owner. The name should be specified in the DOMAIN\username format.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="size" type="oval-sc:EntityItemIntType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Size of the file in bytes.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="a_time" type="oval-sc:EntityItemIntType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Time of last access of file. Valid on NTFS but not on FAT formatted disk drives. The string should represent the FILETIME structure which is a 64-bit value representing the number of 100-nanosecond intervals since January 1, 1601 (UTC).</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="c_time" type="oval-sc:EntityItemIntType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Time of creation of file. Valid on NTFS but not on FAT formatted disk drives. The string should represent the FILETIME structure which is a 64-bit value representing the number of 100-nanosecond intervals since January 1, 1601 (UTC).</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="m_time" type="oval-sc:EntityItemIntType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Time of last modification of file. The string should represent the FILETIME structure which is a 64-bit value representing the number of 100-nanosecond intervals since January 1, 1601 (UTC).</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="ms_checksum" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The checksum of the file as supplied by Microsoft's MapFileAndCheckSum function.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="version" type="oval-sc:EntityItemVersionType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The version of the file.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="type" type="win-sc:EntityItemFileTypeType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The type child element marks wether the file item describes a directory, named pipe, standard file, etc. These types are the return values for GetFileType, with the exception of FILE_ATTRIBUTE_DIRECTORY which is obtained by looking at GetFileAttributesEx.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="development_class" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The development_class element allows the distinction to be made between the GDR development environment and the QFE development environment. This field holds the text found in front of the mmmmmm-nnnn version, for example srv03_gdr.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="company" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>This entity defines the company name held within the version-information structure.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="internal_name" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>This entity defines the internal name held within the version-information structure.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="language" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>This entity defines the language held within the version-information structure.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="original_filename" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>This entity defines the original filename held within the version-information structure.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="product_name" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>This entity defines the product name held within the version-information structure.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="product_version" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>This entity defines the product version held within the version-information structure.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                         </xsd:sequence>
                    </xsd:extension>
               </xsd:complexContent>
          </xsd:complexType>
     </xsd:element>
     <!-- =============================================================================== -->
     <!-- =======================  FILE AUDITED PERMISSIONS ITEM  ======================= -->
     <!-- =============================================================================== -->
     <xsd:element name="fileauditedpermissions_item" substitutionGroup="oval-sc:item">
          <xsd:annotation>
               <xsd:documentation>This item stores the audited access rights of a file that a system access control list (SACL) structure grants to a specified trustee. The trustee's audited access rights are determined checking all access control entries (ACEs) in the SACL. For help with this test see the GetAuditedPermissionsFromAcl() api.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
               <xsd:complexContent>
                    <xsd:extension base="oval-sc:ItemType">
                         <xsd:sequence>
                              <xsd:element name="filepath" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Specifies the absolute path to a file on the machine from which the DACL was retrieved. A directory cannot be specified as a filepath.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="path" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>This element specifies the directory component of the absolute path to a file on the machine from which the DACL was retrieved.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="filename" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1" nillable="true">
                                   <xsd:annotation>
                                        <xsd:documentation>The name of the file. If the xsi:nil attribute is set to true, then the item being represented is the higher directory represented by the path entity. The other items associated with this item would then reflect the values associated with the directory.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="trustee_sid" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The trustee_sid entity specifies the SID that associated a user, group, system, or program (such as a Windows service).</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="trustee_name" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>This element specifies the trustee name associated with this particular SACL.  A trustee can be a user, group, or program (such as a Windows service).  In a domain environment, trustee names should be identified in the form:  "domain\trustee name"   For local trustee names use:  "computer name\trustee name"  For built-in accounts on the system, use the trustee name without a domain.  For example: ADMINISTRATOR, SYSTEM, NETWORK_SERVICES, ADMINISTRATORS (group), etc.  Note that the built-in trustee names should be all caps as that is how the Windows APIs return them.</xsd:documentation>
                                        <xsd:appinfo>
                                             <oval:deprecated_info>
                                                  <oval:version>5.3</oval:version>
                                                  <oval:reason>Replaced by the trustee_sid entity. This entity uses trustee names for identifying trustees. Trustee names are not unique, and a new entity was created to use trustee SIDs, which are unique. See the trustee_sid.</oval:reason>
                                                  <oval:comment>This entity has been deprecated and will be removed in version 6.0 of the language.</oval:comment>
                                             </oval:deprecated_info>
                                             <sch:pattern id="win-sc_fileaudititemtrustee_name">
                                                  <sch:rule context="win-sc:fileauditedpermissions_item/win-sc:trustee_name">
                                                        <sch:report test="true()">DEPRECATED ELEMENT: <sch:value-of select="name()"/> ID: <sch:value-of select="@id"/></sch:report>
                                                  </sch:rule>
                                             </sch:pattern>
                                        </xsd:appinfo>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="standard_delete" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The right to delete the object.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="standard_read_control" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The right to read the information in the object's security descriptor, not including the information in the SACL.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="standard_write_dac" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The right to modify the DACL in the object's security descriptor.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="standard_write_owner" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The right to change the owner in the object's security descriptor.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="standard_synchronize" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The right to use the object for synchronization. This enables a thread to wait until the object is in the signaled state. Some object types do not support this access right.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="access_system_security" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Indicates access to a system access control list (SACL).</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="generic_read" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Read access.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="generic_write" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Write access.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="generic_execute" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Execute access.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="generic_all" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Read, write, and execute access.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_read_data" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Grants the right to read data from the file.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_write_data" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Grants the right to write data to the file.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_append_data" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Grants the right to append data to the file.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_read_ea" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Grants the right to read extended attributes.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_write_ea" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Grants the right to write extended attributes.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_execute" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Grants the right to execute a file.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_delete_child" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Right to delete a directory and all the files it contains (its children), even if the files are read-only.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_read_attributes" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Grants the right to read file attributes.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_write_attributes" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Grants the right to change file attributes.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                         </xsd:sequence>
                    </xsd:extension>
               </xsd:complexContent>
          </xsd:complexType>
     </xsd:element>
     <!-- =============================================================================== -->
     <!-- ========================  FILE EFFECTIVE RIGHTS ITEM  ========================= -->
     <!-- =============================================================================== -->
     <xsd:element name="fileeffectiverights_item" substitutionGroup="oval-sc:item">
          <xsd:annotation>
               <xsd:documentation>This item stores the effective rights of a file that a discretionary access control list (DACL) structure grants to a specified trustee. The trustee's effective rights are determined checking all access-allowed and access-denied access control entries (ACEs) in the DACL. For help with this test see the GetEffectiveRightsFromAcl() api.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
               <xsd:complexContent>
                    <xsd:extension base="oval-sc:ItemType">
                         <xsd:sequence>
                              <xsd:element name="filepath" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Specifies the absolute path to a file on the machine from which the DACL was retrieved. A directory cannot be specified as a filepath.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="path" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>This element specifies the absolute path to a file on the machine from which the DACL was retrieved.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="filename" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1" nillable="true">
                                   <xsd:annotation>
                                        <xsd:documentation>The name of the file. If the xsi:nil attribute is set to true, then the item being represented is the higher directory represented by the path entity. The other items associated with this item would then reflect the values associated with the directory.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="trustee_sid" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The trustee_sid entity specifies the SID that associated a user, group, system, or program (such as a Windows service).</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="trustee_name" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>This element specifies the trustee name associated with this particular DACL.  A trustee can be a user, group, or program (such as a Windows service).  In a domain environment, trustee names should be identified in the form:  "domain\trustee name"   For local trustee names use:  "computer name\trustee name"  For built-in accounts on the system, use the trustee name without a domain.  For example: ADMINISTRATOR, SYSTEM, NETWORK_SERVICES, ADMINISTRATORS (group), etc.  Note that the built-in trustee names should be all caps as that is how the Windows APIs return them.</xsd:documentation>
                                        <xsd:appinfo>
                                             <oval:deprecated_info>
                                                  <oval:version>5.3</oval:version>
                                                  <oval:reason>Replaced by the trustee_sid entity. This entity uses trustee names for identifying trustees. Trustee names are not unique, and a new entity was created to use trustee SIDs, which are unique. See the trustee_sid.</oval:reason>
                                                  <oval:comment>This entity has been deprecated and will be removed in version 6.0 of the language.</oval:comment>
                                             </oval:deprecated_info>
                                             <sch:pattern id="win-sc_feritemtrustee_name">
                                                  <sch:rule context="win-sc:fileeffectiverights_item/win-sc:trustee_name">
                                                        <sch:report test="true()">DEPRECATED ELEMENT: <sch:value-of select="name()"/> ID: <sch:value-of select="@id"/></sch:report>
                                                  </sch:rule>
                                             </sch:pattern>
                                        </xsd:appinfo>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="standard_delete" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The right to delete the object.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="standard_read_control" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The right to read the information in the object's security descriptor, not including the information in the SACL.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="standard_write_dac" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The right to modify the DACL in the object's security descriptor.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="standard_write_owner" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The right to change the owner in the object's security descriptor.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="standard_synchronize" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The right to use the object for synchronization. This enables a thread to wait until the object is in the signaled state. Some object types do not support this access right.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="access_system_security" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Indicates access to a system access control list (SACL).</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="generic_read" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Read access.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="generic_write" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Write access.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="generic_execute" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Execute access.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="generic_all" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Read, write, and execute access.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_read_data" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Grants the right to read data from the file</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_write_data" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Grants the right to write data to the file.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_append_data" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Grants the right to append data to the file.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_read_ea" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Grants the right to read extended attributes.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_write_ea" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Grants the right to write extended attributes.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_execute" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Grants the right to execute a file.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_delete_child" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Right to delete a directory and all the files it contains (its children), even if the files are read-only.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_read_attributes" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Grants the right to read file attributes.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_write_attributes" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Grants the right to change file attributes.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                         </xsd:sequence>
                    </xsd:extension>
               </xsd:complexContent>
          </xsd:complexType>
     </xsd:element>
     <!-- =============================================================================== -->
     <!-- ==============================  GROUP ITEM   ================================== -->
     <!-- =============================================================================== -->
     <xsd:element name="group_item" substitutionGroup="oval-sc:item">
          <xsd:annotation>
               <xsd:documentation>The Windows group_item allows the different users and subgroups, that directly belong to specific groups (identified by name), to be collected. The collected subgroups will not be resolved to find indirect user or subgroup members. If the subgroups need to be resolved, it should be done using the sid_object. Note that the user and subgroup elements can appear an unlimited number of times. If a user is not found in the specified group, a single user element should exist with a status of 'does not exist'. If there is an error determining the users of a group, a single user element should exist with a status of 'error'. If a subgroup is not found in the specified group, a single subgroup element should exist with a status of 'does not exist'. If there is an error determining the subgroups of a group, a single subgroup element should exist with a status of 'error'.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
               <xsd:complexContent>
                    <xsd:extension base="oval-sc:ItemType">
                         <xsd:sequence>
                              <xsd:element name="group" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>A string the represents the name of a particular group. In a domain environment, groups should be identified in the form: "domain\group name" For local groups use: "computer name\group name" For built-in accounts on the system, use the group name without a domain. For example: ADMINISTRATORS, etc. Note that the built-in group names should be all caps as that is how the Windows APIs return them.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="user" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="unbounded">
                                   <xsd:annotation>
                                        <xsd:documentation>A string that represents the name of a particular user. In a domain environment, users should be identified in the form: "domain\user name" For local users use: "computer name\user name" For built-in accounts on the system, use the user name without a domain. For example: ADMINISTRATOR, SYSTEM, etc. Note that the built-in user names should be all caps as that is how the Windows APIs return them.</xsd:documentation>
                                        <xsd:documentation>If the specified group has more than one user as a member, then multiple user elements should exist. If the specified group does not contain a single user, then a single user element should exist with a status of 'does not exist'. If there is an error determining the users that are members of the group, then a single user element should be included with a status of 'error'.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="subgroup" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="unbounded">
                                   <xsd:annotation>
                                        <xsd:documentation>A string that represents the name of a particular subgroup in the specified group. In a domain environment, the subgroups should be identified in the form: "domain\group name".  In a local environment, the subgroups should be identified in the form: "computer name\group name".  If the subgroups are built-in groups, the subgroups should be identified in the form: "group name" without a domain component. Note that the built-in group names should be all caps as that is how the Windows APIs return them.</xsd:documentation>
                                        <xsd:documentation>If the specified group has more than one subgroup as a member, then multiple subgroup elements should exist. If the specified group does not contain a single subgroup, then a single subgroup element should exist with a status of 'does not exist'. If there is an error determining the subgroups that are members of the group, then a single subgroup element should be included with a status of 'error'.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                         </xsd:sequence>
                    </xsd:extension>
               </xsd:complexContent>
          </xsd:complexType>
     </xsd:element>
     <!-- =============================================================================== -->
     <!-- ============================  GROUP SID ITEM   ================================ -->
     <!-- =============================================================================== -->
     <xsd:element name="group_sid_item" substitutionGroup="oval-sc:item">
           <xsd:annotation>
                <xsd:documentation>The Windows group_sid_item allows the different users and subgroups, that directly belong to specific groups (identified by SID), to be collected. The collected subgroups will not be resolved to find indirect user or subgroup members. If the subgroups need to be resolved, it should be done using the sid_sid_object. Note that the user and subgroup elements can appear an unlimited number of times. If a user is not found in the specified group, a single user element should exist with a status of 'does not exist'. If there is an error determining the users of a group, a single user element should exist with a status of 'error'. If a subgroup is not found in the specified group, a single subgroup element should exist with a status of 'does not exist'. If there is an error determining the subgroups of a group, a single subgroup element should exist with a status of 'error'.</xsd:documentation>
           </xsd:annotation>
           <xsd:complexType>
                 <xsd:complexContent>
                       <xsd:extension base="oval-sc:ItemType">
                             <xsd:sequence>
                                   <xsd:element name="group_sid" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                         <xsd:annotation>
                                               <xsd:documentation>A string the represents the SID of a particular group.</xsd:documentation>
                                        </xsd:annotation>
                                   </xsd:element>
                                   <xsd:element name="user_sid" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="unbounded">
                                         <xsd:annotation>
                                               <xsd:documentation>A string that represents the SID of a particular user.  If the specified group has more than one user as a member, then multiple user_sid entities should exist. If the specified group does not contain a single user, then a single user_sid entity should exist with a status of 'does not exist'. If there is an error determining the userss that are members of the group, then a single user_sid entity should be included with a status of 'error'.</xsd:documentation>
                                         </xsd:annotation>
                                   </xsd:element>
                                   <xsd:element name="subgroup_sid" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="unbounded">
                                        <xsd:annotation>
                                             <xsd:documentation>A string that represents the SID of a particular subgroup. If the specified group has more than one subgroup as a member, then multiple subgroup_sid entities should exist. If the specified group does not contain a single subgroup, a single subgroup_sid entity should exist with a status of 'does not exist'. If there is an error determining the subgroups that are members of the group, then a single subgroup_sid entity should be included with a status of 'error'.</xsd:documentation>
                                        </xsd:annotation>
                                   </xsd:element>                                   
                             </xsd:sequence>
                       </xsd:extension>
                 </xsd:complexContent>
           </xsd:complexType>
     </xsd:element>
     <!-- =============================================================================== -->
     <!-- ============================  INTERFACE ITEM  ================================= -->
     <!-- =============================================================================== -->
     <xsd:element name="interface_item" substitutionGroup="oval-sc:item">
          <xsd:annotation>
               <xsd:documentation>Enumerate various attributes about the interfaces on a system.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
               <xsd:complexContent>
                    <xsd:extension base="oval-sc:ItemType">
                         <xsd:sequence>
                              <xsd:element name="name" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>This element specifies the name of an interface.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="index" type="oval-sc:EntityItemIntType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>This element specifies index that identifies the interface.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="type" type="win-sc:EntityItemInterfaceTypeType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>This element specifies the type of interface which is limited to certain set of values.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="hardware_addr" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The hardware_addr entity is the hardware or MAC address of the physical network card. MAC addresses should be formatted according to the IEEE 802-2001 standard which states that a MAC address is a sequence of six octet values, separated by hyphens, where each octet is represented by two hexadecimal digits.  Uppercase letters should also be used to represent the hexadecimal digits A through F.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="inet_addr" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>This element specifies the IP address. Note that the IP address can be IPv4 or IPv6.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="broadcast_addr" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>This element specifies the broadcast address. A broadcast address is typically the IP address with the host portion set to either all zeros or all ones. Note that the IP address can be IPv4 or IPv6.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="netmask" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>This element specifies the subnet mask for the IP address. Note that the IP address can be IPv4 or IPv6.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="addr_type" type="win-sc:EntityItemAddrTypeType" minOccurs="0" maxOccurs="unbounded">
                                   <xsd:annotation>
                                        <xsd:documentation>This element specifies the address type or state of a specific interface. Each interface can be associated with more than one value meaning the addr_type element can occur multiple times.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                         </xsd:sequence>
                    </xsd:extension>
               </xsd:complexContent>
          </xsd:complexType>
     </xsd:element>
     <!-- =============================================================================== -->
     <!-- =========================  LOCKOUT POLICY ITEM  =============================== -->
     <!-- =============================================================================== -->
     <xsd:element name="lockoutpolicy_item" substitutionGroup="oval-sc:item">
          <xsd:annotation>
               <xsd:documentation>The lockoutpolicy item enumerates various attributes associated with lockout information for users and global groups in the security database.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
               <xsd:complexContent>
                    <xsd:extension base="oval-sc:ItemType">
                         <xsd:sequence>
                              <xsd:element name="force_logoff" type="oval-sc:EntityItemIntType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Specifies, in seconds, the amount of time between the end of the valid logon time and the time when the user is forced to log off the network. A value of TIMEQ_FOREVER indicates that the user is never forced to log off. A value of zero indicates that the user will be forced to log off immediately when the valid logon time expires. See the USER_MODALS_INFO_0 structure returned by a call to NetUserModalsGet().</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="lockout_duration" type="oval-sc:EntityItemIntType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Specifies, in seconds, how long a locked account remains locked before it is automatically unlocked. See the USER_MODALS_INFO_3 structure returned by a call to NetUserModalsGet().</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="lockout_observation_window" type="oval-sc:EntityItemIntType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Specifies the maximum time, in seconds, that can elapse between any two failed logon attempts before lockout occurs. See the USER_MODALS_INFO_3 structure returned by a call to NetUserModalsGet().</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="lockout_threshold" type="oval-sc:EntityItemIntType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Specifies the number of invalid password authentications that can occur before an account is marked "locked out." See the USER_MODALS_INFO_3 structure returned by a call to NetUserModalsGet().</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                         </xsd:sequence>
                    </xsd:extension>
               </xsd:complexContent>
          </xsd:complexType>
     </xsd:element>
     <!-- =============================================================================== -->
     <!-- ============================  METABASE ITEM  ================================== -->
     <!-- =============================================================================== -->
     <xsd:element name="metabase_item" substitutionGroup="oval-sc:item">
          <xsd:annotation>
               <xsd:documentation>This item gathers information from the specified metabase keys.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
               <xsd:complexContent>
                    <xsd:extension base="oval-sc:ItemType">
                         <xsd:sequence>
                              <xsd:element name="key" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>This element describes a metabase key to be gathered.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="id" type="oval-sc:EntityItemIntType" minOccurs="0" maxOccurs="1" nillable="true">
                                   <xsd:annotation>
                                        <xsd:documentation>The id element specifies a particular object under the metabase key. If the xsi:nil attribute is set to true, then the item being represented is the higher level metabase key. Using xsi:nil here will result in a status of 'does not exist' for the other entities associated with this item since these entities are not associated with a key by itself.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="name" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>This element describes the name of the specified metabase object.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="user_type" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The user_type element is a DWORD that specifies the user type of the data. See the METADATA_RECORD structure.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="data_type" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The data_type element identifies the type of data in the metabase entry. See the METADATA_RECORD structure.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="data" type="oval-sc:EntityItemAnySimpleType" minOccurs="0" maxOccurs="unbounded">
                                   <xsd:annotation>
                                        <xsd:documentation>The actual data of the named item under the specified metabase key. If the specified metabase key is of type multi string, then multiple value elements should exist to describe the array of strings.</xsd:documentation>
                                        <xsd:appinfo>
                                             <sch:pattern id="win-sc_metabaseitemdata">
                                                  <sch:rule context="win-sc:metabase_item/win-sc:data">
                                                       <sch:assert test="not(@datatype='record')"><sch:value-of select="../@id"/> - datatype attribute for the <sch:value-of select="name()"/> entity of an <sch:value-of select="name(..)"/> should not be 'record'</sch:assert>
                                                  </sch:rule>
                                             </sch:pattern>
                                        </xsd:appinfo>
                                   </xsd:annotation>
                              </xsd:element>
                         </xsd:sequence>
                    </xsd:extension>
               </xsd:complexContent>
          </xsd:complexType>
     </xsd:element>
     <!-- =============================================================================== -->
     <!-- ========================  PASSWORD POLICY ITEM  =============================== -->
     <!-- =============================================================================== -->
     <xsd:element name="passwordpolicy_item" substitutionGroup="oval-sc:item">
          <xsd:annotation>
               <xsd:documentation>Specific policy items associated with passwords. It is important to note that these policies are specific to certain versions of Windows.  As a result, the documentation for that version of Windows should be consulted for more information. Information is stored in the SAM or Active Directory but is encrypted or hidden so the registry_item and activedirectory_item are of no use. If this can be figured out, then the password_policy item is not needed.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
               <xsd:complexContent>
                    <xsd:extension base="oval-sc:ItemType">
                         <xsd:sequence>
                              <xsd:element name="max_passwd_age" type="oval-sc:EntityItemIntType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Specifies, in seconds, the maximum allowable password age. A value of TIMEQ_FOREVER (-1) indicates that the password never expires. The minimum valid value for this element is ONE_DAY (86400).</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="min_passwd_age" type="oval-sc:EntityItemIntType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Specifies the minimum number of seconds that can elapse between the time a password changes and when it can be changed again. A value of zero indicates that no delay is required between password updates.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="min_passwd_len" type="oval-sc:EntityItemIntType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Specifies the minimum allowable password length. Valid values for this element are zero through PWLEN.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="password_hist_len" type="oval-sc:EntityItemIntType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Specifies the length of password history maintained. A new password cannot match any of the previous usrmod0_password_hist_len passwords. Valid values for this element are zero through DEF_MAX_PWHIST.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="password_complexity" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>A boolean value that signifies whether passwords must meet the complexity requirements put forth by the operating system.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="reversible_encryption" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Determines whether or not passwords are stored using reversible encryption.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                         </xsd:sequence>
                    </xsd:extension>
               </xsd:complexContent>
          </xsd:complexType>
     </xsd:element>
     <!-- =============================================================================== -->
     <!-- ==============================  PORT ITEM  ==================================== -->
     <!-- =============================================================================== -->
     <xsd:element name="port_item" substitutionGroup="oval-sc:item">
          <xsd:annotation>
               <xsd:documentation>Information about open listening ports.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
               <xsd:complexContent>
                    <xsd:extension base="oval-sc:ItemType">
                         <xsd:sequence>
                              <xsd:element name="local_address" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>This element specifies the local IP address the listening port is bound to. Note that the IP address can be IPv4 or IPv6.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="local_port" type="oval-sc:EntityItemIntType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>This element specifies the number assigned to the local listening port.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="protocol" type="win-sc:EntityItemProtocolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>This element specifies the type of listening port. It is restricted to either TCP or UDP.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="pid" type="oval-sc:EntityItemIntType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The id given to the process that is associated with the specified listening port.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="foreign_address" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>This is the IP address with which the program is communicating, or with which it will communicate, in the case of a listening server. Note that the IP address can be IPv4 or IPv6.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="foreign_port" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>This is the TCP or UDP port to which the program communicates. In the case of a listening program accepting new connections, this is usually a *.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                         </xsd:sequence>
                    </xsd:extension>
               </xsd:complexContent>
          </xsd:complexType>
     </xsd:element>
     <!-- =============================================================================== -->
     <!-- =======================  PRINTER EFFECTIVE RIGHTS ITEM  ======================= -->
     <!-- =============================================================================== -->
     <xsd:element name="printereffectiverights_item" substitutionGroup="oval-sc:item">
          <xsd:annotation>
               <xsd:documentation>This item stores the effective rights of a printer that a discretionary access control list (DACL) structure grants to a specified trustee. The trustee's effective rights are determined checking all access-allowed and access-denied access control entries (ACEs) in the DACL. For help with this test see the GetEffectiveRightsFromAcl() api.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
               <xsd:complexContent>
                    <xsd:extension base="oval-sc:ItemType">
                         <xsd:sequence>
                              <xsd:element name="printer_name" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The printer_name enitity specifies the name of the printer.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="trustee_sid" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The trustee_sid entity specifies the SID that associated a user, group, system, or program (such as a Windows service).</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="standard_delete" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The right to delete the object.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="standard_read_control" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The right to read the information in the object's security descriptor, not including the information in the SACL.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="standard_write_dac" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The right to modify the DACL in the object's security descriptor.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="standard_write_owner" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The right to change the owner in the object's security descriptor.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="standard_synchronize" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The right to use the object for synchronization. This enables a thread to wait until the object is in the signaled state. Some object types do not support this access right.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="access_system_security" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Indicates access to a system access control list (SACL).</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="generic_read" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Read access.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="generic_write" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Write access.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="generic_execute" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Execute access.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="generic_all" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Read, write, and execute access.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="printer_access_administer" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation/>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="printer_access_use" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation/>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="job_access_administer" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation/>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="job_access_read" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation/>
                                   </xsd:annotation>
                              </xsd:element>
                         </xsd:sequence>
                    </xsd:extension>
               </xsd:complexContent>
          </xsd:complexType>
     </xsd:element>
     <!-- =============================================================================== -->
     <!-- ============================  PROCESS ITEM  =================================== -->
     <!-- =============================================================================== -->
     <xsd:element name="process_item" substitutionGroup="oval-sc:item">
          <xsd:annotation>
               <xsd:documentation>Information about running processes.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
               <xsd:complexContent>
                    <xsd:extension base="oval-sc:ItemType">
                         <xsd:sequence>
                              <xsd:element name="command_line" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                         <xsd:documentation>The command_line entity is the string used to start the process.  This includes any parameters that are part of the command line.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="pid" type="oval-sc:EntityItemIntType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The id given to the process that is created for a specified command line.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="ppid" type="oval-sc:EntityItemIntType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The id given to the parent of the process that is created for the specified command line</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="priority" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The base priority of the process.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="image_path" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                         <xsd:documentation>The image_path entity contains the name of the executable file in question.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="current_dir" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                         <xsd:documentation>The current_directory entity represents the current path to the executable.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                         </xsd:sequence>
                    </xsd:extension>
               </xsd:complexContent>
          </xsd:complexType>
     </xsd:element>
     <!-- =============================================================================== -->
     <!-- ============================  REGISTRY ITEM  ================================== -->
     <!-- =============================================================================== -->
     <xsd:element name="registry_item" substitutionGroup="oval-sc:item">
          <xsd:annotation>
               <xsd:documentation>The windows registry item specifies information that can be collected about a particular registry key.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
               <xsd:complexContent>
                    <xsd:extension base="oval-sc:ItemType">
                         <xsd:sequence>
                              <xsd:element name="hive" type="win-sc:EntityItemRegistryHiveType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The hive that the registry key belongs to.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="key" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1" nillable="true">
                                   <xsd:annotation>
                                        <xsd:documentation>This element describes a registry key to be gathered. Note that the hive portion of the string should not be inclueded, as this data can be found under the hive element. If the xsi:nil attribute is set to true, then the item being represented is the higher level hive. Using xsi:nil here will result in a status of 'does not exist' for the type, and value entities since these entities are not associated with a hive by itself. Note that when xsi:nil is used for the key element, the name element should also be nilled.</xsd:documentation>
                                        <xsd:appinfo>
                                             <sch:pattern id="win-sc_regitemkey">
                                                  <sch:rule context="win-sc:registry_item/win-sc:key">
                                                       <sch:assert test="not(@xsi:nil='true') or ../win-sc:name/@xsi:nil='true'"><sch:value-of select="../@id"/> - name entity must be nil when key is nil</sch:assert>
                                                  </sch:rule>
                                             </sch:pattern>
                                        </xsd:appinfo>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="name" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1" nillable="true">
                                   <xsd:annotation>
                                        <xsd:documentation>This element describes the name of a registry key. If the xsi:nil attribute is set to true, then the item being represented is the higher level key. Using xsi:nil here will result in a status of 'does not exist' for the type, and value entities since these entities are not associated with a key by itself.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="type" type="win-sc:EntityItemRegistryTypeType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Specifies the type of data stored by the registry key. Please refer to the EntityItemRegistryTypeType for more information about the different possible types.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="value" type="oval-sc:EntityItemAnySimpleType" minOccurs="0" maxOccurs="unbounded">
                                   <xsd:annotation>
                                        <xsd:documentation>The value entity holds the actual value of the specified registry key. The representation of the value as well as the associated datatype attribute depends on type of data stored in the registry key. If the specified registry key is of type REG_BINARY, then the datatype attribute should be set to 'binary' and the data represented by the value entity should follow the xsd:hexBinary form. (each binary octet is encoded as two hex digits) If the registry key is of type REG_DWORD or REG_QWORD, then the datatype attribute should be set to 'int' and the value entity should represent the data as an integer. If the specified registry key is of type REG_EXPAND_SZ, then the datatype attribute should be set to 'string' and the pre-expanded string should be represented by the value entity. If the specified registry key is of type REG_MULTI_SZ, then multiple value entities should exist to describe the array of strings, with each value element holds a single string. In the end, there should be the same number of value entities as there are strings in the reg_multi_sz array. If the specified registry key is of type REG_SZ, then the datatype should be 'string' and the value entity should be a copy of the string.</xsd:documentation>
                                        <xsd:appinfo>
                                             <sch:pattern id="win-sc_regitemresult">
                                                  <sch:rule context="win-sc:registry_item/win-sc:value">
                                                       <sch:assert test="not(@datatype='record')"><sch:value-of select="../@id"/> - datatype attribute for the <sch:value-of select="name()"/> entity of an <sch:value-of select="name(..)"/> should not be 'record'</sch:assert>
                                                  </sch:rule>
                                             </sch:pattern>
                                        </xsd:appinfo>
                                   </xsd:annotation>
                              </xsd:element>
                         </xsd:sequence>
                    </xsd:extension>
               </xsd:complexContent>
          </xsd:complexType>
     </xsd:element>
     <!-- =============================================================================== -->
     <!-- ===================  REGISTRY KEY AUDITED PERMISSIONS ITEM  =================== -->
     <!-- =============================================================================== -->
     <xsd:element name="regkeyauditedpermissions_item" substitutionGroup="oval-sc:item">
          <xsd:annotation>
               <xsd:documentation>This item stores the audited access rights of a registry key that a system access control list (SACL) structure grants to a specified trustee. The trustee's audited access rights are determined checking all access control entries (ACEs) in the SACL. For help with this test see the GetAuditedPermissionsFromAcl() api.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
               <xsd:complexContent>
                    <xsd:extension base="oval-sc:ItemType">
                         <xsd:sequence>
                              <xsd:element name="hive" type="win-sc:EntityItemRegistryHiveType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>This element specifies the hive of a registry key on the machine from which the SACL was retrieved.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="key" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>This element specifies a registry key on the machine from which the SACL was retrieved. Note that the hive portion of the string should not be inclueded, as this data should be found under the hive element.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="trustee_sid" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The security identifier (SID) of the specified trustee name.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="trustee_name" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>This element specifies the trustee name associated with this particular DACL.  A trustee can be a user, group, or program (such as a Windows service).  In a domain environment, trustee names should be identified in the form:  "domain\trustee name"   For local trustee names use:  "computer name\trustee name"  For built-in accounts on the system, use the trustee name without a domain.  For example: ADMINISTRATOR, SYSTEM, NETWORK_SERVICES, ADMINISTRATORS (group), etc.  Note that the built-in trustee names should be all caps as that is how the Windows APIs return them.</xsd:documentation>
                                        <xsd:appinfo>
                                             <oval:deprecated_info>
                                                  <oval:version>5.3</oval:version>
                                                  <oval:reason>Replaced by the trustee_sid entity. This entity uses trustee names for identifying trustees. Trustee names are not unique, and a new entity was created to use trustee SIDs, which are unique. See the trustee_sid.</oval:reason>
                                                  <oval:comment>This entity has been deprecated and will be removed in version 6.0 of the language.</oval:comment>
                                             </oval:deprecated_info>
                                             <sch:pattern id="win-sc_rapitemtrustee_name">
                                                  <sch:rule context="win-sc:regkeyauditedpermissions_item/win-sc:trustee_name">
                                                        <sch:report test="true()">DEPRECATED ELEMENT: <sch:value-of select="name()"/> ID: <sch:value-of select="@id"/></sch:report>
                                                  </sch:rule>
                                             </sch:pattern>
                                        </xsd:appinfo>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="standard_delete" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The right to delete the object.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="standard_read_control" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The right to read the information in the object's security descriptor, not including the information in the SACL.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="standard_write_dac" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The right to modify the DACL in the object's security descriptor.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="standard_write_owner" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The right to change the owner in the object's security descriptor.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="standard_synchronize" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The right to use the object for synchronization. This enables a thread to wait until the object is in the signaled state. Some object types do not support this access right.</xsd:documentation>
                                        <xsd:appinfo>
                                             <oval:deprecated_info>
                                                  <oval:version>5.6</oval:version>
                                                  <oval:reason>This entity has been deprecated because registry keys do not support the SYNCHRONIZE standard access right.</oval:reason>
                                             </oval:deprecated_info>
                                             <sch:pattern id="win-sc_rapitemstandard_synchronize">
                                                  <sch:rule context="win-sc:regkeyauditedpermissions_item/win-sc:standard_synchronize">
                                                       <sch:report test="true()">DEPRECATED ELEMENT: <sch:value-of select="name()"/> ID: <sch:value-of select="@id"/></sch:report>
                                                  </sch:rule>
                                             </sch:pattern>
                                        </xsd:appinfo>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="access_system_security" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Indicates access to a system access control list (SACL).</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="generic_read" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Read access.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="generic_write" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Write access.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="generic_execute" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Execute access.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="generic_all" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Read, write, and execute access.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="key_query_value" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation/>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="key_set_value" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation/>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="key_create_sub_key" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation/>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="key_enumerate_sub_keys" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation/>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="key_notify" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation/>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="key_create_link" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation/>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="key_wow64_64key" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation/>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="key_wow64_32key" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation/>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="key_wow64_res" type="win-sc:EntityItemAuditType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation/>
                                   </xsd:annotation>
                              </xsd:element>
                         </xsd:sequence>
                    </xsd:extension>
               </xsd:complexContent>
          </xsd:complexType>
     </xsd:element>
     <!-- =============================================================================== -->
     <!-- ====================  REGISTRY KEY EFFECTIVE RIGHTS ITEM  ===================== -->
     <!-- =============================================================================== -->
     <xsd:element name="regkeyeffectiverights_item" substitutionGroup="oval-sc:item">
          <xsd:annotation>
               <xsd:documentation>This item stores the effective rights of a registry key that a discretionary access control list (DACL) structure grants to a specified trustee. The trustee's effective rights are determined checking all access-allowed and access-denied access control entries (ACEs) in the DACL. For help with this test see the GetEffectiveRightsFromAcl() api.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
               <xsd:complexContent>
                    <xsd:extension base="oval-sc:ItemType">
                         <xsd:sequence>
                              <xsd:element name="hive" type="win-sc:EntityItemRegistryHiveType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The hive that the registry key belongs to.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="key" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1" nillable="true">
                                   <xsd:annotation>
                                        <xsd:documentation>This element describes a registry key to be gathered. Note that the hive portion of the string should not be inclueded, as this data can be found under the hive element. If the xsi:nil attribute is set to true, then the item being represented is the higher level hive.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="trustee_sid" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The trustee_sid entity specifies the SID that associated a user, group, system, or program (such as a Windows service).</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="trustee_name" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>This element specifies the trustee name associated with this particular DACL.  A trustee can be a user, group, or program (such as a Windows service).  In a domain environment, trustee names should be identified in the form:  "domain\trustee name"   For local trustee names use:  "computer name\trustee name"  For built-in accounts on the system, use the trustee name without a domain.  For example: ADMINISTRATOR, SYSTEM, NETWORK_SERVICES, ADMINISTRATORS (group), etc.  Note that the built-in trustee names should be all caps as that is how the Windows APIs return them.</xsd:documentation>
                                        <xsd:appinfo>
                                             <oval:deprecated_info>
                                                  <oval:version>5.3</oval:version>
                                                  <oval:reason>Replaced by the trustee_sid entity. This entity uses trustee names for identifying trustees. Trustee names are not unique, and a new entity was created to use trustee SIDs, which are unique. See the trustee_sid.</oval:reason>
                                                  <oval:comment>This entity has been deprecated and will be removed in version 6.0 of the language.</oval:comment>
                                             </oval:deprecated_info>
                                             <sch:pattern id="win-sc_reritemtrustee_name">
                                                  <sch:rule context="win-sc:regkeyeffectiverights_item/win-sc:trustee_name">
                                                        <sch:report test="true()">DEPRECATED ELEMENT: <sch:value-of select="name()"/> ID: <sch:value-of select="@id"/></sch:report>
                                                  </sch:rule>
                                             </sch:pattern>
                                        </xsd:appinfo>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="standard_delete" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The right to delete the object.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="standard_read_control" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The right to read the information in the object's security descriptor, not including the information in the SACL.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="standard_write_dac" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The right to modify the DACL in the object's security descriptor.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="standard_write_owner" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The right to change the owner in the object's security descriptor.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="standard_synchronize" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The right to use the object for synchronization. This enables a thread to wait until the object is in the signaled state. Some object types do not support this access right.</xsd:documentation>
                                        <xsd:appinfo>
                                             <oval:deprecated_info>
                                                  <oval:version>5.6</oval:version>
                                                  <oval:reason>This entity has been deprecated because registry keys do not support the SYNCHRONIZE standard access right.</oval:reason>
                                             </oval:deprecated_info>
                                             <sch:pattern id="win-sc_reritemstandard_synchronize">
                                                  <sch:rule context="win-sc:regkeyeffectiverights_item/win-sc:standard_synchronize">
                                                       <sch:report test="true()">DEPRECATED ELEMENT: <sch:value-of select="name()"/> ID: <sch:value-of select="@id"/></sch:report>
                                                  </sch:rule>
                                             </sch:pattern>
                                        </xsd:appinfo>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="access_system_security" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Indicates access to a system access control list (SACL).</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="generic_read" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Read access.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="generic_write" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Write access.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="generic_execute" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Execute access.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="generic_all" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Read, write, and execute access.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="key_query_value" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation/>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="key_set_value" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation/>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="key_create_sub_key" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation/>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="key_enumerate_sub_keys" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation/>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="key_notify" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation/>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="key_create_link" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation/>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="key_wow64_64key" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation/>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="key_wow64_32key" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation/>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="key_wow64_res" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation/>
                                   </xsd:annotation>
                              </xsd:element>
                         </xsd:sequence>
                    </xsd:extension>
               </xsd:complexContent>
          </xsd:complexType>
     </xsd:element>
     <!-- =============================================================================== -->
     <!-- ========================  SERVICE EFFECTIVE RIGHTS ITEM  ====================== -->
     <!-- =============================================================================== -->
     <xsd:element name="serviceeffectiverights_item" substitutionGroup="oval-sc:item">
          <xsd:annotation>
               <xsd:documentation>This item stores the effective rights of a service that a discretionary access control list (DACL) structure grants to a specified trustee.  The trustee's effective rights are determined by checking all access-allowed and access-denied access control entries (ACEs) in the DACL.  For help with this test see the GetEffectiveRightsFromAcl() api.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
               <xsd:complexContent>
                    <xsd:extension base="oval-sc:ItemType">
                         <xsd:sequence>
                              <xsd:element name="service_name" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1" nillable="false">
                                   <xsd:annotation>
                                        <xsd:documentation>The service_name element specifies a service on the machine from which to retrieve the DACL. Note that the service_name element should contain the actual name of the service and not its display name that is found in Control Panel->Administrative Tools->Services.  For example, if you wanted to check the effective rights of the Automatic Updates service you would specify 'wuauserv' for the service_name element not 'Automatic Updates'.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="trustee_sid" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The trustee_sid element specifies the SID that is associated with a user, group, system, or program (such as a Windows service).</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="standard_delete" type="oval-sc:EntityItemBoolType" minOccurs="0">
                                   <xsd:annotation>
                                        <xsd:documentation>This permission is required to call the DeleteService function to delete the service.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="standard_read_control" type="oval-sc:EntityItemBoolType" minOccurs="0">
                                   <xsd:annotation>
                                        <xsd:documentation>This permission is required to call the QueryServiceObjectSecurity function to query the security descriptor of the service object.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="standard_write_dac" type="oval-sc:EntityItemBoolType" minOccurs="0">
                                   <xsd:annotation>
                                        <xsd:documentation>This permission is required to call the SetServiceObjectSecurity function to modify the Dacl member of the service object's security descriptor.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="standard_write_owner" type="oval-sc:EntityItemBoolType" minOccurs="0">
                                   <xsd:annotation>
                                        <xsd:documentation>This permission is required to call the SetServiceObjectSecurity function to modify the Owner and Group members of the service object's security descriptor.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="generic_read" type="oval-sc:EntityItemBoolType" minOccurs="0">
                                   <xsd:annotation>
                                        <xsd:documentation>Read access (STANDARD_RIGHTS_READ, SERVICE_QUERY_CONFIG, SERVICE_QUERY_STATUS, SERVICE_INTERROGATE, SERVICE_ENUMERATE_DEPENDENTS).</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="generic_write" type="oval-sc:EntityItemBoolType" minOccurs="0">
                                   <xsd:annotation>
                                        <xsd:documentation>Write access (STANDARD_RIGHTS_WRITE, SERVICE_CHANGE_CONFIG).</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="generic_execute" type="oval-sc:EntityItemBoolType" minOccurs="0">
                                   <xsd:annotation>
                                        <xsd:documentation>Execute access (STANDARD_RIGHTS_EXECUTE, SERVICE_START, SERVICE_STOP, SERVICE_PAUSE_CONTINUE, SERVICE_USER_DEFINED_CONTROL).</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="service_query_conf" type="oval-sc:EntityItemBoolType" minOccurs="0">
                                   <xsd:annotation>
                                        <xsd:documentation>This permission is required to call the QueryServiceConfig and QueryServiceConfig2 functions to query the service configuration.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="service_change_conf" type="oval-sc:EntityItemBoolType" minOccurs="0">
                                   <xsd:annotation>
                                        <xsd:documentation>This permission is required to call the ChangeServiceConfig or ChangeServiceConfig2 function to change the service configuration. </xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="service_query_stat" type="oval-sc:EntityItemBoolType" minOccurs="0">
                                   <xsd:annotation>
                                        <xsd:documentation>This permission is required to call the QueryServiceStatusEx function to ask the service control manager about the status of the service.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="service_enum_dependents" type="oval-sc:EntityItemBoolType" minOccurs="0">
                                   <xsd:annotation>
                                        <xsd:documentation>This permission is required to call the EnumDependentServices function to enumerate all the services dependent on the service.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="service_start" type="oval-sc:EntityItemBoolType" minOccurs="0">
                                   <xsd:annotation>
                                        <xsd:documentation>This permission is required to call the StartService function to start the service.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="service_stop" type="oval-sc:EntityItemBoolType" minOccurs="0">
                                   <xsd:annotation>
                                        <xsd:documentation>This permission is required to call the ControlService function to stop the service.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="service_pause" type="oval-sc:EntityItemBoolType" minOccurs="0">
                                   <xsd:annotation>
                                        <xsd:documentation>This permission is required to call the ControlService function to pause or continue the service.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="service_interrogate" type="oval-sc:EntityItemBoolType" minOccurs="0">
                                   <xsd:annotation>
                                        <xsd:documentation>This permission is required to call the ControlService function to ask the service to report its status immediately.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="service_user_defined" type="oval-sc:EntityItemBoolType" minOccurs="0">
                                   <xsd:annotation>
                                        <xsd:documentation>This permission is required to call the ControlService function to specify a user-defined control code.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                         </xsd:sequence>
                    </xsd:extension>
               </xsd:complexContent>
          </xsd:complexType>
     </xsd:element>
     <!-- =============================================================================== -->
     <!-- ===========================  SHARED RESOURCE ITEM   =========================== -->
     <!-- =============================================================================== -->
     <xsd:element name="sharedresource_item" substitutionGroup="oval-sc:item">
          <xsd:annotation>
               <xsd:documentation/>
          </xsd:annotation>
          <xsd:complexType>
               <xsd:complexContent>
                    <xsd:extension base="oval-sc:ItemType">
                         <xsd:sequence>
                              <xsd:element name="netname" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The share name of the resource.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="shared_type" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The type of the shared resource.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="max_uses" type="oval-sc:EntityItemIntType" minOccurs="0" maxOccurs="unbounded">
                                   <xsd:annotation>
                                        <xsd:documentation>The maximum number of concurrent connections that the shared resource can accommodate.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="current_uses" type="oval-sc:EntityItemIntType" minOccurs="0" maxOccurs="unbounded">
                                   <xsd:annotation>
                                        <xsd:documentation>The number of current connections to the shared resource.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="local_path" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The local path for the shared resource.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="access_read_permission" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Permission to read data from a resource and, by default, to execute the resource.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="access_write_permission" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Permission to write data to the resource.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="access_create_permission" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Permission to create an instance of the resource (such as a file); data can be written to the resource as the resource is created.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="access_exec_permission" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Permission to execute the resource.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="access_delete_permission" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Permission to delete the resource.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="access_atrib_permission" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Permission to modify the resource's attributes (such as the date and time when a file was last modified).</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="access_perm_permission" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Permission to modify the permissions (read, write, create, execute, and delete) assigned to a resource for a user or application.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="access_all_permission" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Permission to read, write, create, execute, and delete resources, and to modify their attributes and permissions.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                         </xsd:sequence>
                    </xsd:extension>
               </xsd:complexContent>
          </xsd:complexType>
     </xsd:element>
     <!-- =============================================================================== -->
     <!-- =================================  SID ITEM   ================================= -->
     <!-- =============================================================================== -->
     <xsd:element name="sid_item" substitutionGroup="oval-sc:item">
          <xsd:annotation>
               <xsd:documentation/>
          </xsd:annotation>
          <xsd:complexType>
               <xsd:complexContent>
                    <xsd:extension base="oval-sc:ItemType">
                         <xsd:sequence>
                              <xsd:element name="trustee_name" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>This element specifies the trustee name associated with a particular SID. In a domain environment, trustee names should be identified in the form: "domain\trustee name" For local trustee names use: "computer name\trustee name" For built-in accounts on the system, use the trustee name without a domain. For example: ADMINISTRATOR, SYSTEM, NETWORK_SERVICES, ADMINISTRATORS (group), etc. Note that the built-in trustee names should be all caps as that is how the Windows APIs return them.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="trustee_sid" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The security identifier (SID) of the specified trustee name.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="trustee_domain" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The domain of the specified trustee name.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                         </xsd:sequence>
                    </xsd:extension>
               </xsd:complexContent>
          </xsd:complexType>
     </xsd:element>
     <!-- =============================================================================== -->
     <!-- =================================  SID SID ITEM   ============================= -->
     <!-- =============================================================================== -->
     <xsd:element name="sid_sid_item" substitutionGroup="oval-sc:item">
          <xsd:annotation>
               <xsd:documentation/>
          </xsd:annotation>
          <xsd:complexType>
               <xsd:complexContent>
                    <xsd:extension base="oval-sc:ItemType">
                         <xsd:sequence>
                              <xsd:element name="trustee_sid" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The security identifier (SID) of the specified trustee name.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="trustee_name" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>This element specifies the trustee name associated with a particular SID. In a domain environment, trustee names should be identified in the form: "domain\trustee name" For local trustee names use: "computer name\trustee name" For built-in accounts on the system, use the trustee name without a domain. For example: ADMINISTRATOR, SYSTEM, NETWORK_SERVICES, ADMINISTRATORS (group), etc. Note that the built-in trustee names should be all caps as that is how the Windows APIs return them.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="trustee_domain" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The domain of the specified trustee name.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                         </xsd:sequence>
                    </xsd:extension>
               </xsd:complexContent>
          </xsd:complexType>
     </xsd:element>
     <!-- =============================================================================== -->
     <!-- =========================  USER ACCESS CONTROL ITEM  ========================== -->
     <!-- =============================================================================== -->
     <xsd:element name="uac_item" substitutionGroup="oval-sc:item">
          <xsd:annotation>
               <xsd:documentation>The uac_item is used to hold information about settings related to User Access Control within Windows.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
               <xsd:complexContent>
                    <xsd:extension base="oval-sc:ItemType">
                         <xsd:sequence>
                              <xsd:element name="admin_approval_mode" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Admin Approval Mode for the Built-in Administrator account.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="elevation_prompt_admin" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Behavior of the elevation prompt for administrators in Admin Approval Mode.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="elevation_prompt_standard" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Behavior of the elevation prompt for standard users.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="detect_installations" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Detect application installations and prompt for elevation.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="elevate_signed_executables" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Only elevate executables that are signed and validated.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="elevate_uiaccess" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Only elevate UIAccess applications that are installed in secure locations.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="run_admins_aam" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Run all administrators in Admin Approval Mode.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="secure_desktop" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Switch to the secure desktop when prompting for elevation.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="virtualize_write_failures" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>Virtualize file and registry write failures to per-user locations.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                         </xsd:sequence>
                    </xsd:extension>
               </xsd:complexContent>
          </xsd:complexType>
     </xsd:element>
     <!-- =============================================================================== -->
     <!-- ==============================  USER ITEM  ==================================== -->
     <!-- =============================================================================== -->
     <xsd:element name="user_item" substitutionGroup="oval-sc:item">
          <xsd:annotation>
               <xsd:documentation>The windows user_item allows the different groups (identified by name) that a user belongs to be collected.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
               <xsd:complexContent>
                    <xsd:extension base="oval-sc:ItemType">
                         <xsd:sequence>
                              <xsd:element name="user" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>A string the represents the name of a particular user. In a domain environment, users should be identified in the form: "domain\user name" For local users use: "computer_name\user_name" For built-in accounts on the system, use the user name without a domain. For example: ADMINISTRATOR, SYSTEM, etc. Note that the built-in user names should be all caps as that is how the Windows APIs return them.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="enabled" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>A boolean that represents whether the particular user is enabled or not.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="group" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="unbounded">
                                   <xsd:annotation>
                                        <xsd:documentation>A string that represents the name of a particular group. In a domain environment, groups should be identified in the form: "domain\group name" For local groups use: "computer name\group name" For built-in accounts on the system, use the group name without a domain. For example: ADMINISTRATORS, etc. Note that the built-in group names should be all caps as that is how the Windows APIs return them.</xsd:documentation>
                                        <xsd:documentation>If the specified user belongs to more than one group, then multiple group elements should exist. If the specified user is not a member of a single group, then a single group element should exist with a status of 'does not exist'. If there is an error determining the groups that the user belongs to, then a single group element should be included with a status of 'error'.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                         </xsd:sequence>
                    </xsd:extension>
               </xsd:complexContent>
          </xsd:complexType>
     </xsd:element>
     <!-- =============================================================================== -->
     <!-- ============================  USER SID ITEM  ================================== -->
     <!-- =============================================================================== -->
     <xsd:element name="user_sid_item" substitutionGroup="oval-sc:item">
           <xsd:annotation>
                 <xsd:documentation>The windows user_sid_item allows the different groups (identified by SID) that a user belongs to be collected.</xsd:documentation>
           </xsd:annotation>
           <xsd:complexType>
                  <xsd:complexContent>
                       <xsd:extension base="oval-sc:ItemType">
                             <xsd:sequence>
                                   <xsd:element name="user_sid" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                         <xsd:annotation>
                                               <xsd:documentation>A string the represents the SID of a particular user.</xsd:documentation>
                                         </xsd:annotation>
                                   </xsd:element>
                                   <xsd:element name="enabled" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                         <xsd:annotation>
                                               <xsd:documentation>A boolean that represents whether the particular user is enabled or not.</xsd:documentation>
                                         </xsd:annotation>
                                   </xsd:element>
                                   <xsd:element name="group_sid" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="unbounded">
                                         <xsd:annotation>
                                               <xsd:documentation>A string that represents the SID of a particular group.  If the specified user belongs to more than one group, then multiple group_sid elements should exist. If the specified user is not a member of a single group, then a single group_sid element should exist with a status of 'does not exist'. If there is an error determining the groups that the user belongs to, then a single group_sid element should be included with a status of 'error'.</xsd:documentation>
                                         </xsd:annotation>
                                   </xsd:element>
                             </xsd:sequence>
                       </xsd:extension>
                 </xsd:complexContent>
           </xsd:complexType>
     </xsd:element>
     <!-- =============================================================================== -->
     <!-- =============================  VOLUME ITEM  =================================== -->
     <!-- =============================================================================== -->
     <xsd:element name="volume_item" substitutionGroup="oval-sc:item">
          <xsd:annotation>
               <xsd:documentation>The volume item enumerates various attributes about a particular volume mounted to a machine. This includes the various system flags returned by GetVolumeInformation(). It is important to note that these system flags are specific to certain versions of Windows.  As a result, the documentation for that version of Windows should be consulted for more information.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
               <xsd:complexContent>
                    <xsd:extension base="oval-sc:ItemType">
                         <xsd:sequence>
                              <xsd:element name="rootpath" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>A string that contains the root directory of the volume to be described. A trailing backslash is required. For example, you would specify \\MyServer\MyShare as "\\MyServer\MyShare\", or the C drive as "C:\".</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_system" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The type of filesystem. For example FAT or NTFS.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="name" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The name of the volume.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="volume_max_component_length" type="oval-sc:EntityItemIntType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The volume_max_component_length element specifies the maximum length, in TCHARs, of a file name component that a specified file system supports. A file name component is the portion of a file name between backslashes. The value that is stored in the variable that *lpMaximumComponentLength points to is used to indicate that a specified file system supports long names. For example, for a FAT file system that supports long names, the function stores the value 255, rather than the previous 8.3 indicator. Long names can also be supported on systems that use the NTFS file system.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="serial_number" type="oval-sc:EntityItemIntType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The volume serial number.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_case_sensitive_search" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The file system supports case-sensitive file names.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_case_preserved_names" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The file system preserves the case of file names when it places a name on disk.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_unicode_on_disk" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The file system supports Unicode in file names as they appear on disk.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_persistent_acls" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The file system preserves and enforces ACLs. For example, NTFS preserves and enforces ACLs, and FAT does not.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_file_compression" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The file system supports file-based compression.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_volume_quotas" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The file system supports disk quotas.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_supports_sparse_files" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The file system supports sparse files.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_supports_reparse_points" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The file system supports reparse points.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_supports_remote_storage" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The specified volume is a compressed volume; for example, a DoubleSpace volume.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_volume_is_compressed" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The specified volume is a compressed volume; for example, a DoubleSpace volume.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_supports_object_ids" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The file system supports object identifiers.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_supports_encryption" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The file system supports the Encrypted File System (EFS).</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_named_streams" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The file system supports named streams.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="file_read_only_volume" type="oval-sc:EntityItemBoolType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The specified volume is read-only.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                         </xsd:sequence>
                    </xsd:extension>
               </xsd:complexContent>
          </xsd:complexType>
     </xsd:element>
     <!-- =============================================================================== -->
     <!-- =============================  WMI CONTENT ITEM   ============================= -->
     <!-- =============================================================================== -->
     <xsd:element name="wmi_item" substitutionGroup="oval-sc:item">
          <xsd:annotation>
               <xsd:documentation>The wmi_item outlines information to be checked through Microsoft's WMI interface.</xsd:documentation>
               <xsd:appinfo>
                    <oval:deprecated_info>
                         <oval:version>5.7</oval:version>
                         <oval:reason>Replaced by the wmi57_item. This item allows for single fields to be selected from WMI. A new item was created to allow more than one field to be selected in one statement. See the wmi57_item.</oval:reason>
                         <oval:comment>This object has been deprecated and may be removed in a future version of the language.</oval:comment>
                    </oval:deprecated_info>
                    <sch:pattern id="win-sc_wmi_item_dep">
                         <sch:rule context="win-sc:wmi_item">
                              <sch:report test="true()">DEPRECATED ITEM: <sch:value-of select="name()"/> ID: <sch:value-of select="@id"/></sch:report>
                         </sch:rule>
                    </sch:pattern>                        
               </xsd:appinfo>
          </xsd:annotation>
          <xsd:complexType>
               <xsd:complexContent>
                    <xsd:extension base="oval-sc:ItemType">
                         <xsd:sequence>
                              <xsd:element name="namespace" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The WMI namespaces of the specific object.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="wql" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>A WQL query used to identify the object(s) specified. Any valid WQL query is allowed with one exception, at most one field is allowed in the SELECT portion of the query. For example SELECT name FROM ... is valid, as is SELECT 'true' FROM ..., but SELECT name, number FROM ... is not valid. This is because the result element in the data section is only designed to work against a single field.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="result" type="oval-sc:EntityItemAnySimpleType" minOccurs="0" maxOccurs="unbounded">
                                   <xsd:annotation>
                                        <xsd:documentation>The result element specifies how to test objects in the result set of the specified WQL statement. Only one comparable field is allowed. So if the WQL statement look like 'SELECT name FROM ...', then a result element with a value of 'Fred' would test that value against the names returned by the WQL statement. If the WQL statement returns more than one instance of the specified field, then multiple result elements should exist to describe each instance.</xsd:documentation>
                                        <xsd:appinfo>
                                             <sch:pattern id="win-sc_wmiitemresult">
                                                  <sch:rule context="win-sc:wmi_item/win-sc:value">
                                                       <sch:assert test="not(@datatype='record')"><sch:value-of select="../@id"/> - datatype attribute for the <sch:value-of select="name()"/> entity of an <sch:value-of select="name(..)"/> should not be 'record'</sch:assert>
                                                  </sch:rule>
                                             </sch:pattern>
                                        </xsd:appinfo>
                                   </xsd:annotation>
                              </xsd:element>
                         </xsd:sequence>
                    </xsd:extension>
               </xsd:complexContent>
          </xsd:complexType>
     </xsd:element>
     <!-- =============================================================================== -->
     <!-- =============================  WMI CONTENT ITEM  (57)  ======================== -->
     <!-- =============================================================================== -->
     <xsd:element name="wmi57_item" substitutionGroup="oval-sc:item">
          <xsd:annotation>
               <xsd:documentation>The wmi57_item outlines information to be checked through Microsoft's WMI interface.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
               <xsd:complexContent>
                    <xsd:extension base="oval-sc:ItemType">
                         <xsd:sequence>
                              <xsd:element name="namespace" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>The WMI namespaces of the specific object.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="wql" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>A WQL query used to identify the object(s) specified. Any valid WQL query is allowed with one exception, all fields must be named. For example SELECT name, age FROM ... is valid, but SELECT * FROM ... is not valid. This is because the record entity supports only named fields.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="result" type="oval-sc:EntityItemRecordType" minOccurs="0" maxOccurs="unbounded">
                                   <xsd:annotation>
                                        <xsd:documentation>The result entity holds the results of the specified WQL statement.</xsd:documentation>
                                   </xsd:annotation>                                   
                              </xsd:element>
                         </xsd:sequence>
                    </xsd:extension>
               </xsd:complexContent>
          </xsd:complexType>
     </xsd:element>
     <!-- =============================================================================== -->
     <!-- =========================  WUA UPDATE SEARCHER ITEM   ========================= -->
     <!-- =============================================================================== -->
     <xsd:element name="wuaupdatesearcher_item" substitutionGroup="oval-sc:item">
         <xsd:annotation>
             <xsd:documentation>The wuaupdatesearcher_item outlines information defined through the Search method of the IUpdateSearcher interface as part of Microsoft's WUA (Windows Update Agent) API.  This information is related to the current patch level in a Windows environment.  The test extends the standard ItemType as defined in the oval-system-characteristics schema and one should refer to the ItemType description for more information.</xsd:documentation>
         </xsd:annotation>
         <xsd:complexType>
             <xsd:complexContent>
                 <xsd:extension base="oval-sc:ItemType">
                     <xsd:sequence>
                         <xsd:element name="search_criteria" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                             <xsd:annotation>
                                 <xsd:documentation></xsd:documentation>
                             </xsd:annotation>
                         </xsd:element>
                         <xsd:element name="update_id" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="unbounded">
                             <xsd:annotation>
                                 <xsd:documentation>The update_id entity specifies a string that represents a revision-independent identifier of an update.  This information is part of the IUpdateIdentity interface that is part of the result of the IUpdateSearcher interface's Search method.  Note that multiple update identifiers can be associated with a give search criteria and thus multiple entities can exist for this item.</xsd:documentation>
                             </xsd:annotation>
                         </xsd:element>
                     </xsd:sequence>
                 </xsd:extension>
             </xsd:complexContent>
         </xsd:complexType>
     </xsd:element>
     <!-- =============================================================================== -->
     <!-- =============================================================================== -->
     <!-- =============================================================================== -->
     <xsd:complexType name="EntityItemAddrTypeType">
          <xsd:annotation>
               <xsd:documentation>The EntityItemAddrTypeType restricts a string value to a specific set of values that describe the different address types of interfaces. The empty string is also allowed to support empty elements associated with error conditions.</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleContent>
               <xsd:restriction base="oval-sc:EntityItemStringType">
                    <xsd:enumeration value="MIB_IPADDR_DELETED">
                         <xsd:annotation>
                              <xsd:documentation>The stated IP address is being deleted. The unsigned short value that this corresponds to is 0x0040</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="MIB_IPADDR_DISCONNECTED">
                         <xsd:annotation>
                              <xsd:documentation>The stated IP address is on a disconnected interface. The unsigned short value that this corresponds to is 0x0008.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="MIB_IPADDR_DYNAMIC">
                         <xsd:annotation>
                              <xsd:documentation>The stated IP address is a dynamic IP address. The unsigned short value that this corresponds to is 0x0004.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="MIB_IPADDR_PRIMARY">
                         <xsd:annotation>
                              <xsd:documentation>The stated IP address is a primary IP address. The unsigned short value that this corresponds to is 0x0001.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="MIB_IPADDR_TRANSIENT">
                         <xsd:annotation>
                              <xsd:documentation>The stated IP address is a transient IP address. The unsigned short value that this corresponds to is 0x0080</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="">
                         <xsd:annotation>
                              <xsd:documentation>The empty string value is permitted here to allow for detailed error reporting.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
               </xsd:restriction>
          </xsd:simpleContent>
     </xsd:complexType>
     <xsd:complexType name="EntityItemAdstypeType">
          <xsd:annotation>
               <xsd:documentation>The EntityItemAdstypeType restricts a string value to a specific set of values that describe the possible types associated with an Active Directory attribute. The empty string is also allowed to support empty elements associated with error conditions.</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleContent>
               <xsd:restriction base="oval-sc:EntityItemStringType">
                    <xsd:enumeration value="ADSTYPE_INVALID">
                         <xsd:annotation>
                              <xsd:documentation>The data type is invalid.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="ADSTYPE_DN_STRING">
                         <xsd:annotation>
                              <xsd:documentation>The string is of Distinguished Name (path) of a directory service object.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="ADSTYPE_CASE_EXACT_STRING">
                         <xsd:annotation>
                              <xsd:documentation>The string is of the case-sensitive type.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="ADSTYPE_CASE_IGNORE_STRING">
                         <xsd:annotation>
                              <xsd:documentation>The string is of the case-insensitive type.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="ADSTYPE_PRINTABLE_STRING">
                         <xsd:annotation>
                              <xsd:documentation>The string is displayable on the screen or in print.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="ADSTYPE_NUMERIC_STRING">
                         <xsd:annotation>
                              <xsd:documentation>The string is of a numeric value to be interpreted as text.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="ADSTYPE_BOOLEAN">
                         <xsd:annotation>
                              <xsd:documentation>The data is of a Boolean value.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="ADSTYPE_INTEGER">
                         <xsd:annotation>
                              <xsd:documentation>The data is of an integer value.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="ADSTYPE_OCTET_STRING">
                         <xsd:annotation>
                              <xsd:documentation>The string is of a byte array.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="ADSTYPE_UTC_TIME">
                         <xsd:annotation>
                              <xsd:documentation>The data is of the universal time as expressed in Universal Time Coordinate (UTC).</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="ADSTYPE_LARGE_INTEGER">
                         <xsd:annotation>
                              <xsd:documentation>The data is of a long integer value.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="ADSTYPE_PROV_SPECIFIC">
                         <xsd:annotation>
                              <xsd:documentation>The string is of a provider-specific string.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="ADSTYPE_OBJECT_CLASS">
                         <xsd:annotation>
                              <xsd:documentation>Not used.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="ADSTYPE_CASEIGNORE_LIST">
                         <xsd:annotation>
                              <xsd:documentation>The data is of a list of case insensitive strings.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="ADSTYPE_OCTET_LIST">
                         <xsd:annotation>
                              <xsd:documentation>The data is of a list of octet strings.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="ADSTYPE_PATH">
                         <xsd:annotation>
                              <xsd:documentation>The string is of a directory path.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="ADSTYPE_POSTALADDRESS">
                         <xsd:annotation>
                              <xsd:documentation>The string is of the postal address type.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="ADSTYPE_TIMESTAMP">
                         <xsd:annotation>
                              <xsd:documentation>The data is of a time stamp in seconds.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="ADSTYPE_BACKLINK">
                         <xsd:annotation>
                              <xsd:documentation>The string is of a back link.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="ADSTYPE_TYPEDNAME">
                         <xsd:annotation>
                              <xsd:documentation>The string is of a typed name.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="ADSTYPE_HOLD">
                         <xsd:annotation>
                              <xsd:documentation>The data is of the Hold data structure.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="ADSTYPE_NETADDRESS">
                         <xsd:annotation>
                              <xsd:documentation>The string is of a net address.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="ADSTYPE_REPLICAPOINTER">
                         <xsd:annotation>
                              <xsd:documentation>The data is of a replica pointer.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="ADSTYPE_FAXNUMBER">
                         <xsd:annotation>
                              <xsd:documentation>The string is of a fax number.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="ADSTYPE_EMAIL">
                         <xsd:annotation>
                              <xsd:documentation>The data is of an e-mail message.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="ADSTYPE_NT_SECURITY_DESCRIPTOR">
                         <xsd:annotation>
                              <xsd:documentation>The data is of Windows NT/Windows 2000 Security Descriptor as represented by a byte array.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="ADSTYPE_UNKNOWN">
                         <xsd:annotation>
                              <xsd:documentation>The data is of an undefined type.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="ADSTYPE_DN_WITH_BINARY">
                         <xsd:annotation>
                              <xsd:documentation>The data is of ADS_DN_WITH_BINARY used for mapping a distinguished name to a non varying GUID. </xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="ADSTYPE_DN_WITH_STRING">
                         <xsd:annotation>
                              <xsd:documentation>The data is of ADS_DN_WITH_STRING used for mapping a distinguished name to a non-varying string value.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="">
                         <xsd:annotation>
                              <xsd:documentation>The empty string value is permitted here to allow for detailed error reporting.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
               </xsd:restriction>
          </xsd:simpleContent>
     </xsd:complexType>
     <xsd:complexType name="EntityItemAuditType">
          <xsd:annotation>
               <xsd:documentation>The EntityItemAuditType restricts a string value to a specific set of values: AUDIT_NONE, AUDIT_SUCCESS, AUDIT_FAILURE, and AUDIT_SUCCESS_FAILURE. These values describe which audit records should be generated. The empty string is also allowed to support empty elements associated with error conditions.</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleContent>
               <xsd:restriction base="oval-sc:EntityItemStringType">
                    <xsd:enumeration value="AUDIT_FAILURE">
                         <xsd:annotation>
                              <xsd:documentation>The audit type AUDIT_FAILURE is used to perform audits on all unsuccessful occurrences of specified events when auditing is enabled.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="AUDIT_NONE">
                         <xsd:annotation>
                              <xsd:documentation>The audit type AUDIT_NONE is used to cancel all auditing options for the specified events.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="AUDIT_SUCCESS">
                         <xsd:annotation>
                              <xsd:documentation>The audit type AUDIT_SUCCESS is used to perform audits on all successful occurrences of the specified events when auditing is enabled.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="AUDIT_SUCCESS_FAILURE">
                         <xsd:annotation>
                              <xsd:documentation>The audit type AUDIT_SUCCESS_FAILURE is used to perform audits on all successful and unsuccessful occurrences of the specified events when auditing is enabled.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="">
                         <xsd:annotation>
                              <xsd:documentation>The empty string value is permitted here to allow for detailed error reporting.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
               </xsd:restriction>
          </xsd:simpleContent>
     </xsd:complexType>
     <xsd:complexType name="EntityItemFileTypeType">
          <xsd:annotation>
               <xsd:documentation>The EntityItemFileTypeType restricts a string value to a specific set of values that describe the different types of files. The empty string is also allowed to support empty elements associated with error conditions.</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleContent>
               <xsd:restriction base="oval-sc:EntityItemStringType">
                    <xsd:enumeration value="FILE_ATTRIBUTE_DIRECTORY">
                         <xsd:annotation>
                              <xsd:documentation>The handle identifies a directory.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="FILE_TYPE_CHAR">
                         <xsd:annotation>
                              <xsd:documentation>The specified file is a character file, typically an LPT device or a console.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="FILE_TYPE_DISK">
                         <xsd:annotation>
                              <xsd:documentation>The specified file is a disk file.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="FILE_TYPE_PIPE">
                         <xsd:annotation>
                              <xsd:documentation>The specified file is a socket, a named pipe, or an anonymous pipe.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="FILE_TYPE_REMOTE">
                         <xsd:annotation>
                              <xsd:documentation>Unused.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="FILE_TYPE_UNKNOWN">
                         <xsd:annotation>
                              <xsd:documentation>Either the type of the specified file is unknown, or the function failed.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="">
                         <xsd:annotation>
                              <xsd:documentation>The empty string value is permitted here to allow for detailed error reporting.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
               </xsd:restriction>
          </xsd:simpleContent>
     </xsd:complexType>
     <xsd:complexType name="EntityItemInterfaceTypeType">
          <xsd:annotation>
               <xsd:documentation>The EntityItemInterfaceTypeType restricts a string value to a specific set of values that describe the different types of interfaces. The empty string is also allowed to support empty elements associated with error conditions.</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleContent>
               <xsd:restriction base="oval-sc:EntityItemStringType">
                    <xsd:enumeration value="MIB_IF_TYPE_ETHERNET">
                         <xsd:annotation>
                              <xsd:documentation>The MIB_IF_TYPE_ETHERNET type is used to describe ethernet interfaces.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="MIB_IF_TYPE_FDDI">
                         <xsd:annotation>
                              <xsd:documentation>The MIB_IF_TYPE_FDDI type is used to describe fiber distributed data interfaces (FDDI).</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="MIB_IF_TYPE_LOOPBACK">
                         <xsd:annotation>
                              <xsd:documentation>The MIB_IF_TYPE_LOOPBACK type is used to describe loopback interfaces.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="MIB_IF_TYPE_OTHER">
                         <xsd:annotation>
                              <xsd:documentation>The MIB_IF_TYPE_OTHER type is used to describe unknown interfaces.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="MIB_IF_TYPE_PPP">
                         <xsd:annotation>
                              <xsd:documentation>The MIB_IF_TYPE_PPP type is used to describe point-to-point protocol interfaces (PPP).</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="MIB_IF_TYPE_SLIP">
                         <xsd:annotation>
                              <xsd:documentation>The MIB_IF_TYPE_SLIP type is used to describe serial line internet protocol interfaces (SLIP).</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="MIB_IF_TYPE_TOKENRING">
                         <xsd:annotation>
                              <xsd:documentation>The MIB_IF_TYPE_TOKENRING type is used to describe token ring interfaces..</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="">
                         <xsd:annotation>
                              <xsd:documentation>The empty string value is permitted here to allow for detailed error reporting.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
               </xsd:restriction>
          </xsd:simpleContent>
     </xsd:complexType>
     <xsd:complexType name="EntityItemNamingContextType">
          <xsd:annotation>
               <xsd:documentation>The EntityItemNamingContextType restricts a string value to a specific set of values: domain, configuration, and schema. These values describe the different naming context found withing Active Directory. The empty string is also allowed to support empty elements associated with error conditions.</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleContent>
               <xsd:restriction base="oval-sc:EntityItemStringType">
                    <xsd:enumeration value="domain">
                         <xsd:annotation>
                              <xsd:documentation>The domain naming context contains Active Directory objects present in the specified domain (e.g. users, computers, groups, and other objects).</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="configuration">
                         <xsd:annotation>
                              <xsd:documentation>The configuration naming context contains configuration data that is required for the Active Directory to operate as a directory service.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="schema">
                         <xsd:annotation>
                              <xsd:documentation>The schema naming context contains all of the Active Directory object definitions.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="">
                         <xsd:annotation>
                              <xsd:documentation>The empty string value is permitted here to allow for detailed error reporting.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
               </xsd:restriction>
          </xsd:simpleContent>
     </xsd:complexType>
     <xsd:complexType name="EntityItemProtocolType">
          <xsd:annotation>
               <xsd:documentation>The EntityItemProtocolType restricts a string value to a specific set of values that describe the different available protocols. The empty string is also allowed to support empty elements associated with error conditions.</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleContent>
               <xsd:restriction base="oval-sc:EntityItemStringType">
                    <xsd:enumeration value="TCP">
                         <xsd:annotation>
                              <xsd:documentation>The port uses the Transmission Control Protocol (TCP).</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="UDP">
                         <xsd:annotation>
                              <xsd:documentation>The port uses the User Datagram Protocol (UDP).</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="">
                         <xsd:annotation>
                              <xsd:documentation>The empty string value is permitted here to allow for detailed error reporting.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
               </xsd:restriction>
          </xsd:simpleContent>
     </xsd:complexType>
     <xsd:complexType name="EntityItemRegistryHiveType">
          <xsd:annotation>
               <xsd:documentation>The EntityItemRegistryHiveType restricts a string value to a specific set of values that describe the different registry hives. The empty string is also allowed to support empty elements associated with error conditions.</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleContent>
               <xsd:restriction base="oval-sc:EntityItemStringType">
                    <xsd:enumeration value="HKEY_CLASSES_ROOT">
                         <xsd:annotation>
                              <xsd:documentation>This registry subtree contains information that associates file types with programs and configuration data for automation (e.g. COM objects and Visual Basic Programs).</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="HKEY_CURRENT_CONFIG">
                         <xsd:annotation>
                              <xsd:documentation>This registry subtree contains configuration data for the current hardware profile.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="HKEY_CURRENT_USER">
                         <xsd:annotation>
                              <xsd:documentation>This registry subtree contains the user profile of the user that is currently logged into the system.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="HKEY_LOCAL_MACHINE">
                         <xsd:annotation>
                              <xsd:documentation>This registry subtree contains information about the local system.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="HKEY_USERS">
                         <xsd:annotation>
                              <xsd:documentation>This registry subtree contains user-specific data.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="">
                         <xsd:annotation>
                              <xsd:documentation>The empty string value is permitted here to allow for detailed error reporting.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
               </xsd:restriction>
          </xsd:simpleContent>
     </xsd:complexType>
     <xsd:complexType name="EntityItemRegistryTypeType">
          <xsd:annotation>
               <xsd:documentation>The EntityItemRegistryTypeType defines the different values that are valid for the type entity of a registry item. These values describe the possible types of data stored in a registry key. restricts a string value to a specific set of values that describe the different registry types. The empty string is also allowed as a valid value to support empty emlements associated with error conditions. Please note that the values identified are for the type entity and are not valid values for the datatype attribute. For information about how to encode registry data in OVAL for each of the different types, please visit the registry_item documentation.</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleContent>
               <xsd:restriction base="oval-sc:EntityItemStringType">
                    <xsd:enumeration value="reg_binary">
                         <xsd:annotation>
                              <xsd:documentation>The reg_binary type is used by registry keys that specify binary data in any form.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="reg_dword">
                         <xsd:annotation>
                              <xsd:documentation>The reg_dword type is used by registry keys that specify a 32-bit number.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="reg_expand_sz">
                         <xsd:annotation>
                              <xsd:documentation>The reg_expand_sz type is used by registry keys to specify a null-terminated string that contains unexpanded references to environment variables (for example, "%PATH%").</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="reg_multi_sz">
                         <xsd:annotation>
                              <xsd:documentation>The reg_multi_sz type is used by registry keys that specify an array of null-terminated strings, terminated by two null characters.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="reg_none">
                         <xsd:annotation>
                              <xsd:documentation>The reg_none type is used by registry keys that have no defined value type.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="reg_qword">
                         <xsd:annotation>
                              <xsd:documentation>The reg_qword type is used by registry keys that specify a 64-bit number.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="reg_sz">
                         <xsd:annotation>
                              <xsd:documentation>The reg_sz type is used by registry keys that specify a single null-terminated string.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="">
                         <xsd:annotation>
                              <xsd:documentation>The empty string value is permitted here to allow for detailed error reporting.</xsd:documentation>
                         </xsd:annotation>
                    </xsd:enumeration>
               </xsd:restriction>
          </xsd:simpleContent>
     </xsd:complexType>
</xsd:schema>
