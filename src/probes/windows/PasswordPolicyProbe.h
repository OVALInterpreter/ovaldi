//
//
//****************************************************************************************//
// Copyright (c) 2002-2010, The MITRE Corporation
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without modification, are
// permitted provided that the following conditions are met:
//
//     * Redistributions of source code must retain the above copyright notice, this list
//       of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above copyright notice, this 
//       list of conditions and the following disclaimer in the documentation and/or other
//       materials provided with the distribution.
//     * Neither the name of The MITRE Corporation nor the names of its contributors may be
//       used to endorse or promote products derived from this software without specific 
//       prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY 
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT 
// SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
// OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
// TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
// EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
//****************************************************************************************//

#ifndef PASSWORDPOLICYPROBE_H
#define PASSWORDPOLICYPROBE_H

#pragma warning(disable:4786)

#include "AbsProbe.h"
#include "WindowsCommon.h"
#include "REGEX.h"

#include <aclapi.h>
#include <windows.h>
#include <lm.h>

using namespace std;

class PasswordPolicyProbe : public AbsProbe {
public:
	virtual ~PasswordPolicyProbe();
	
	/** Run the probe. */
	virtual ItemVector* CollectItems(Object* object);

	/** Ensure that the PasswordPolicyProbe is a singleton. */
	static AbsProbe* Instance();

private:
	PasswordPolicyProbe();

	/** Return a new Item created for storing password policy information. */
	virtual Item* CreateItem();
			
    /**
        Checks to see if password_complaexity and reversible_encryption are set.

		First the RSoP WMI is queried.  This will only contain values if the system
		is joined to a domain and if the settings are set using a GPO.

		If the WMI query does not return the settings, the "secedit.exe" tool will be
		executed.  The file generated by this tool will be parsed and the relevant values
		will be extracted.

        NOTE: This is a workaround until we find the correct API call to retrieve this data.
        This sould not be considered the correct way to retrieve this data.

     */
    void ArePasswordComplexityReverseEncryptionSet(std::string &passwordComplexity, std::string &reversibleEncryption);
	
    static PasswordPolicyProbe *instance;
};

#endif
